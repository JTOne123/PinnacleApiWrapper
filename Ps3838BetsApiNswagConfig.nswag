{
  "runtime": "NetCore22",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "swagger: '2.0'\r\ninfo:\r\n  version: 1.0.0\r\n  title: PS3838 API - Bets API Reference\r\n  description:  |\r\n    All about bets, place bets, get your bet history or current bet status.\r\n  \r\n    # Authentication \r\n    \r\n    API uses HTTP Basic access authentication.You need to send Authorization HTTP Request header:  \r\n    \r\n    `Authorization: Basic <Base64 value of UTF-8 encoded \"username:password\">`\r\n    \r\n    Example:\r\n    \r\n    `Authorization: Basic U03MyOT23YbzMDc6d3c3O1DQ1`\r\n    \r\n  x-logo:\r\n    url: ''\r\nhost: api.ps3838.com\r\nschemes:\r\n  - https\r\nsecurity:\r\n  - basicAuth: []\r\npaths:\r\n  /v1/bets/place:\r\n    post:\r\n      tags:\r\n        - Place Bets\r\n      summary: Place straight bet - v1\r\n      description: Place straight bet v1\r\n      operationId: Bets_Straight\r\n      consumes:\r\n        - application/json; charset=utf-8\r\n      produces:\r\n        - application/json; charset=utf-8\r\n      parameters:\r\n        - in: body\r\n          name: request\r\n          description: The Place StraightBet request.\r\n          required: true\r\n          schema:\r\n            $ref: '#/definitions/PlaceBetRequest'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/PlaceBetResponse'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\n      deprecated: true\r\n  /v2/bets/place:\r\n    post:\r\n      tags:\r\n        - Place Bets\r\n      summary: Place straight bet  - v2\r\n      description: | \r\n           Place straight bet (SPREAD, MONEYLINE, TOTAL_POINTS, TEAM_TOTAL_POINTS).\r\n      \r\n           Please note when the status is PENDING_ACCEPTANCE and if the live delay was applied, the response will not have betId. Client would have to call /bets by uniqueRequestId to check the status if the bet was ACCEPTED.\r\n           \r\n           For more details please see [Betting on Events with Live Delay](https://www.pinnacle.com/en/api/manual#livedelaybetting)\r\n      operationId: Bets_StraightV2\r\n      consumes:\r\n        - application/json\r\n      produces:\r\n        - application/json\r\n      parameters:\r\n        - in: body\r\n          name: request\r\n          description: ''\r\n          required: true\r\n          schema:\r\n            $ref: '#/definitions/PlaceBetRequestV2'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/PlaceBetResponseV2'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\n  /v1/bets/parlay:\r\n    post:\r\n      tags:\r\n        - Place Bets\r\n      summary: Place parlay bet - v1\r\n      operationId: Bets_Parlay\r\n      consumes:\r\n        - application/json\r\n      produces:\r\n        - application/json\r\n      parameters:\r\n        - in: body\r\n          name: request\r\n          description: The Parlay request.\r\n          required: true\r\n          schema:\r\n            $ref: '#/definitions/PlaceParlayBetRequest'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/PlaceParlayBetResponse'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\n      deprecated: true\r\n  /v2/bets/parlay:\r\n    post:\r\n      tags:\r\n        - Place Bets\r\n      summary: Place parlay bet - v2\r\n      operationId: Bets_ParlayV2\r\n      consumes:\r\n        - application/json\r\n      produces:\r\n        - application/json\r\n      parameters:\r\n        - in: body\r\n          name: request\r\n          description: The Parlay request.\r\n          required: true\r\n          schema:\r\n            $ref: '#/definitions/PlaceParlayBetRequest'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/PlaceParlayBetResponseV2'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\t\t\t\r\n  /v1/bets/teaser:\r\n    post:\r\n      tags:\r\n        - Place Bets\r\n      summary: Place teaser bet - v1\r\n      operationId: Bets_Teaser\r\n      consumes:\r\n        - application/json\r\n      produces:\r\n        - application/json\r\n      parameters:\r\n        - in: body\r\n          name: request\r\n          description: The PlaceTeaser request.\r\n          required: true\r\n          schema:\r\n            $ref: '#/definitions/PlaceTeaserBetRequest'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/PlaceTeaserBetResponse'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\n  /v2/bets/special:\r\n    post:\r\n      tags:\r\n        - Place Bets\r\n      summary: Place specials bet - v2\r\n      operationId: Bets_SpecialV2\r\n      consumes:\r\n        - application/json\r\n      produces:\r\n        - application/json\r\n      parameters:\r\n        - in: body\r\n          name: request\r\n          description: The SpecialBet request.\r\n          required: true\r\n          schema:\r\n            $ref: '#/definitions/MultiBetRequest[SpecialBetRequest]'\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/MultiBetResponse[SpecialBetResponse]'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\n  /v1/bets:\r\n    get:\r\n      tags:\r\n        - Get Bets\r\n      summary: Get Bets - v1\r\n      description: |\r\n          Returns bets. \r\n          \r\n          \r\n          ### Get running bets by time range:\r\n          ```\r\n          https://api.ps3838.com/v2/bets?betlist=RUNNING&fromDate=2017-11-21T00:00:00Z&toDate=2017-11-29T00:00:00Z\r\n          ```\r\n          Running bets are queried by *placedAt* date time\r\n          \r\n          \r\n          ### Get settled bets by time range:\r\n            \r\n          ```\r\n          https://api.ps3838.com/v2/bets?betlist=SETTLED&fromDate=2015-12-28T00:00:00Z&toDate=2015-12-29T00:00:00Z\r\n          ```\r\n          When a bet is settled it's tagged with the settlement date and midnight time in [PST time zone](https://en.wikipedia.org/wiki/Pacific_Time_Zone).  When querying by fromDate/toDate range, date time gets converted from [UTC](https://en.wikipedia.org/wiki/Coordinated_Universal_Time) to  [PST](https://en.wikipedia.org/wiki/Pacific_Time_Zone) and then its used to filter the settled bets, e.g. if one wants to query all settled bets between 2017-11-20 and 2017-11-22 (in PST time zone) one should issue a  call: \r\n          ```\r\n          https://api.ps3838.com/v2/bets?betlist=SETTLED&fromDate=2017-11-20T00:00:00Z&toDate=2017-11-23T00:00:00Z\r\n          ```\r\n          Internally this will be converted to PST:\r\n          fromDate=2017-11-19 16:00:00\r\n          toDate=2017-11-22 16:00:00\r\n          and cover the wanted time range.\r\n\r\n          \r\n          \r\n             \r\n          ### Get bets by bet ids:\r\n          \r\n          ```\r\n          https://api.ps3838.com/v1/bets?betIds=775856112,775856113,775856114\r\n          ```\r\n          \r\n          ### Get bets by uniqueRequestIds:\r\n          \r\n          ```\r\n          https://api.ps3838.com/v1/bets?uniqueRequestIds=62335222-dae4-479a-8c05-46440ccdd3bb,42335222-dae4-479a-8c05-46440ccdd3bb\r\n          ```\r\n          \r\n      operationId: Bets_GetBetsByType\r\n      consumes: []\r\n      produces:\r\n        - application/json\r\n      parameters:\r\n        - name: betlist\r\n          in: query\r\n          description: 'Type of bet list to return. Not needed when betids is submitted.'\r\n          required: false\r\n          type: string\r\n          enum:\r\n            - SETTLED\r\n            - RUNNING\r\n            - CANCELLED\r\n        - name: fromDate\r\n          in: query\r\n          description: |\r\n            Start date of the requested period. Required when betlist parameter is submitted. Difference between fromDate and toDdate can’t be more than 30 days. Expected format is ISO8601 - can be set to just date or date and time.\r\n          required: false\r\n          type: string\r\n        - name: toDate\r\n          in: query\r\n          description: |\r\n            End date of the requested period. Required when betlist parameter is submitted. Expected format is ISO8601 - can be set to just date or date and time.  toDate value is exclusive, meaning it cannot be equal to fromDate.\r\n          required: false\r\n          type: string\r\n        - name: betids\r\n          in: query\r\n          description: 'A comma separated list of bet ids. When betids is submitted, no other parameter is necessary. Maximum is 100 ids. Works for all non settled bets and all bets settled in the last 30 days.'\r\n          required: false\r\n          type: array\r\n          items:\r\n            type: integer\r\n            format: int64\r\n          collectionFormat: csv\r\n        - name: uniqueRequestIds\r\n          in: query\r\n          description: |\r\n              A comma separated list of uniqueRequestIds to query earlier  placed straight bets. If specified, is treated with highest priority, all other parameters are ignored. Maximum is 10 ids. If client has bet id, preferred way is to use betIds query parameter to check the get the bets. You can use uniqueRequestIds when you do not  have bet id. That’s pretty much in just 2 cases\\:\r\n              \r\n              1. When you bet on live event with live delay, place bet response in that case does not return bet id, so client can query bet status by uniqueRequestIds.\r\n              2. In case of any network issues when client is not sure what happened with his place bet request. Empty response means that the bet was not placed. Please check [Deduplication section](https://www.pinnacle.com/de/api/manual#overview) \r\n              for more details\r\n              \r\n              \r\n              Note that there is a restriction: querying by uniqueRequestIds  is supported only for straight bets and only up to 30 min from the moment the bet was place. \r\n          required: false\r\n          type: array\r\n          items:\r\n            type: string\r\n          collectionFormat: csv\r\n      deprecated: true  \r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/GetBetsByTypeResponse'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\n  /v3/bets:\r\n    get:\r\n      tags:\r\n        - Get Bets\r\n      summary: Get Bets - v3\r\n      description: |\r\n          Returns bets. \r\n          \r\n          \r\n          ### Get running bets by time range:\r\n          ```\r\n          https://api.ps3838.com/v3/bets?betlist=RUNNING&fromDate=2017-11-21T00:00:00Z&toDate=2017-11-29T00:00:00Z\r\n          ```\r\n          Running bets are queried by *placedAt* date time\r\n          \r\n          \r\n          ### Get settled bets by time range:\r\n            \r\n          ```\r\n          https://api.ps3838.com/v3/bets?betlist=SETTLED&fromDate=2015-12-28T00:00:00Z&toDate=2015-12-29T00:00:00Z\r\n          ```\r\n          Settled bets are queried by *settledAt* date time\r\n          https://api.ps3838.com/v3/bets?betlist=SETTLED&fromDate=2017-11-20T00:00:00Z&toDate=2017-11-23T00:00:00Z\r\n          \r\n          \r\n          ### Get settled cancelled bets by time range:\r\n            \r\n          ```\r\n          https://api.ps3838.com/v3/bets?betList=SETTLED&fromDate=2018-03-01&toDate=2018-03-28&betStatuses=CANCELLED\r\n          ```\r\n          \r\n\r\n          ### Get bets by bet ids:\r\n          \r\n          ```\r\n          https://api.ps3838.com/v3/bets?betIds=775856112,775856113,775856114\r\n          ```\r\n          \r\n          ### Get bets by uniqueRequestIds:\r\n          \r\n          ```\r\n          https://api.ps3838.com/v3/bets?uniqueRequestIds=62335222-dae4-479a-8c05-46440ccdd3bb,42335222-dae4-479a-8c05-46440ccdd3bb\r\n          ```\r\n          \r\n      operationId: Bets_GetBetsByTypeV3\r\n      consumes: []\r\n      produces:\r\n        - application/json\r\n      parameters:\r\n        - name: betlist\r\n          in: query\r\n          description: 'Type of bet list to return. Not needed when betids is submitted.'\r\n          required: false\r\n          type: string\r\n          enum:\r\n            - SETTLED\r\n            - RUNNING\r\n            - ALL\r\n        - name: betStatuses\r\n          in: query\r\n          description: 'Type of bet statuse to return. This works only in conjustion with betlist, as additional filter.'\r\n          required: false\r\n          type: array\r\n          items:\r\n            type: string\r\n            enum:\r\n            - WON\r\n            - LOSE \r\n            - CANCELLED \r\n            - REFUNDED \r\n            - NOT_ACCEPTED \r\n            - ACCEPTED \r\n            - PENDING_ACCEPTANCE\r\n          collectionFormat: csv\r\n        - name: fromDate\r\n          in: query\r\n          description: |\r\n            Start date of the requested period. Required when betlist parameter is submitted. Start date can be up to 30 days in the past. Expected format is ISO8601 - can be set to just date or date and time.\r\n          required: false\r\n          type: string\r\n        - name: toDate\r\n          in: query\r\n          description: |\r\n            End date of the requested period. Required when betlist parameter is submitted. Expected format is ISO8601 - can be set to just date or date and time.  toDate value is exclusive, meaning it cannot be equal to fromDate.\r\n          required: false\r\n          type: string\r\n        - name: sortDir\r\n          in: query\r\n          description: 'Sort direction by postedAt/settledAt. Respected only when querying by date range.'\r\n          required: false\r\n          type: string\r\n          enum:\r\n            - ASC\r\n            - DESC\r\n          default: ASC\r\n        - name: pageSize\r\n          in: query\r\n          description: 'Page size in case. Max is 1000. Respected only when querying by date range.'\r\n          required: false\r\n          type: integer\r\n          default: 1000 \r\n        - name: fromRecord\r\n          in: query\r\n          description: 'Starting record (inclusive) of the result. Respected only when querying by date range. To fetch next page set it to toRecord+1 '\r\n          required: false\r\n          type: integer\r\n          default: 0  \r\n        - name: betids\r\n          in: query\r\n          description: 'A comma separated list of bet ids. When betids is submitted, no other parameter is necessary. Maximum is 100 ids. Works for all non settled bets and all bets settled in the last 30 days.'\r\n          required: false\r\n          type: array\r\n          items:\r\n            type: integer\r\n            format: int64\r\n          collectionFormat: csv\r\n        - name: uniqueRequestIds\r\n          in: query\r\n          description: |\r\n              A comma separated list of uniqueRequestIds to query earlier  placed straight bets. If specified, is treated with highest priority, all other parameters are ignored. Maximum is 10 ids. If client has bet id, preferred way is to use betIds query parameter to check the get the bets. You can use uniqueRequestIds when you do not  have bet id. That’s pretty much in just 2 cases\\:\r\n              \r\n              1. When you bet on live event with live delay, place bet response in that case does not return bet id, so client can query bet status by uniqueRequestIds.\r\n              2. In case of any network issues when client is not sure what happened with his place bet request. Empty response means that the bet was not placed. Please check [Deduplication section](https://www.pinnacle.com/de/api/manual#overview) for more details\r\n              \r\n              \r\n              Note that there is a restriction: querying by uniqueRequestIds  is supported only for straight bets and only up to 30 min from the moment the bet was place. \r\n          required: false\r\n          type: array\r\n          items:\r\n            type: string\r\n          collectionFormat: csv\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/GetBetsByTypeResponseV3'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\n            \r\n  /v1/bets/settled:\r\n    get:\r\n      tags:\r\n        - Get Bets\r\n      summary: Get Bets Settled - v1\r\n      description: |\r\n          Returns bets settled.\r\n          \r\n          \r\n          ### Get settled bets settled by time range:\r\n            \r\n          ```\r\n          https://api.ps3838.com/v1/bets/settled?fromDate=2015-12-28T00:00:00Z&toDate=2015-12-29T00:00:00Z\r\n          ```\r\n          \r\n          \r\n      operationId: Bets_GetBetsSettledV1\r\n      consumes: []\r\n      produces:\r\n        - application/json\r\n      parameters:\r\n        - name: eventId\r\n          in: query\r\n          description: Event identification\r\n          required: false\r\n          type: integer\r\n          format: int64\r\n        - name: fromDate\r\n          in: query\r\n          description: |\r\n            Start date of the requested period. Required when betlist parameter is submitted. Start date can be up to 30 days in the past. Expected format is ISO8601 - can be set to just date or date and time.\r\n          required: false\r\n          type: string\r\n        - name: toDate\r\n          in: query\r\n          description: |\r\n            End date of the requested period. Required when betlist parameter is submitted. Expected format is ISO8601 - can be set to just date or date and time.  toDate value is exclusive, meaning it cannot be equal to fromDate.\r\n          required: false\r\n          type: string\r\n      deprecated: true\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/GetBetsByTypeResponse'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\n   \r\n  /v3/bets/settled:\r\n    get:\r\n      tags:\r\n        - Get Bets\r\n      summary: Get Bets Settled - v3\r\n      description: |\r\n          Returns bets settled.\r\n          \r\n          \r\n          ### Get settled bets settled by time range:\r\n            \r\n          ```\r\n          https://api.ps3838.com/v3/bets/settled?fromDate=2015-12-28T00:00:00Z&toDate=2015-12-29T00:00:00Z\r\n          ```\r\n          \r\n          \r\n          ### Get bets settled by uniqueRequestIds:\r\n          \r\n          ```\r\n          https://api.ps3838.com/v3/bets/settled?uniqueRequestIds=62335222-dae4-479a-8c05-46440ccdd3bb,42335222-dae4-479a-8c05-46440ccdd3bb\r\n          ```\r\n          \r\n      operationId: Bets_GetBetsSettledV3\r\n      consumes: []\r\n      produces:\r\n        - application/json\r\n      parameters:\r\n        - name: eventId\r\n          in: query\r\n          description: Event identification\r\n          required: false\r\n          type: integer\r\n          format: int64\r\n        - name: specialId\r\n          in: query\r\n          description: Id of the special.\r\n          required: false\r\n          type: integer\r\n          format: int64\r\n        - name: fromDate\r\n          in: query\r\n          description: |\r\n            Start date of the requested period. Required when betlist parameter is submitted. Start date can be up to 30 days in the past. Expected format is ISO8601 - can be set to just date or date and time.\r\n          required: false\r\n          type: string\r\n        - name: toDate\r\n          in: query\r\n          description: |\r\n            End date of the requested period. Required when betlist parameter is submitted. Expected format is ISO8601 - can be set to just date or date and time.  toDate value is exclusive, meaning it cannot be equal to fromDate.\r\n          required: false\r\n          type: string\r\n        - name: sortDir\r\n          in: query\r\n          description: 'Sort direction by postedAt/settledAt. Respected only when querying by date range.'\r\n          required: false\r\n          type: string\r\n          enum:\r\n            - ASC\r\n            - DESC\r\n          default: ASC\r\n        - name: pageSize\r\n          in: query\r\n          description: 'Page size in case. Max is 1000. Respected only when querying by date range.'\r\n          required: false\r\n          type: integer\r\n          default: 1000 \r\n        - name: fromRecord\r\n          in: query\r\n          description: 'Starting record (inclusive) of the result. Respected only when querying by date range. To fetch next page set it to toRecord+1 '\r\n          required: false\r\n          type: integer\r\n          default: 0  \r\n        - name: uniqueRequestIds\r\n          in: query\r\n          description: |\r\n              A comma separated list of uniqueRequestIds to query earlier  placed straight bets. If specified, is treated with highest priority, all other parameters are ignored. Maximum is 10 ids. If client has bet id, preferred way is to use betIds query parameter to check the get the bets. You can use uniqueRequestIds when you do not  have bet id. That’s pretty much in just 2 cases\\:\r\n              \r\n              1. When you bet on live event with live delay, place bet response in that case does not return bet id, so client can query bet status by uniqueRequestIds.\r\n              2. In case of any network issues when client is not sure what happened with his place bet request. Empty response means that the bet was not placed. Please check [Deduplication section](https://www.pinnacle.com/de/api/manual#overview) for more details\r\n              \r\n              \r\n              Note that there is a restriction: querying by uniqueRequestIds  is supported only for straight bets and only up to 30 min from the moment the bet was place. \r\n          required: false\r\n          type: array\r\n          items:\r\n            type: string\r\n          collectionFormat: csv\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/GetBetsByTypeResponseV3'\r\n        '400':\r\n          description: BadRequest\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\n            \r\n  /v1/bets/betting-status:\r\n    get:\r\n      tags:\r\n        - Betting Status\r\n      summary: Get Betting Status\r\n      description: 'Returns current betting status. During maintenance windows betting could be disabled , you can call this operation to check the current betting status.'\r\n      operationId: Bets_GetBettingStatus\r\n      consumes: []\r\n      produces:\r\n        - application/json\r\n      parameters: []\r\n      responses:\r\n        '200':\r\n          description: OK\r\n          schema:\r\n            $ref: '#/definitions/BettingStatusResponse'\r\n        '401':\r\n          description: Unauthorized\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '403':\r\n          description: Forbidden\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponse'\r\n        '500':\r\n          description: InternalServerError\r\n          schema:\r\n            $ref: '#/definitions/ErrorResponseWithErrorRef'\r\nsecurityDefinitions:\r\n  basicAuth:\r\n    type: basic\r\ndefinitions:\r\n  PlaceBetRequest:\r\n    type: object\r\n    properties:\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: D5CC50E4-284D-4D50-8D49-429BDC4F2A48\r\n        description: This is a Unique ID for PlaceBet requests. This is to support idempotent requests.\r\n      acceptBetterLine:\r\n        type: boolean\r\n        example: true\r\n        description: Whether or not to accept a bet when there is a line change in favor of the client.\r\n      stake:\r\n        type: number\r\n        format: double\r\n        example: 10.5\r\n        description: amount in client’s currency.\r\n      winRiskStake:\r\n        type: string\r\n        example: RISK\r\n        description: Whether the stake amount is risk or win amount.\r\n        enum:\r\n          - WIN\r\n          - RISK\r\n      lineId:\r\n        type: integer\r\n        format: int64\r\n        example: 420921914\r\n        description: Line identification.\r\n      altLineId:\r\n        type: integer\r\n        format: int64\r\n        example: null\r\n        x-nullable: true\r\n        description: Alternate line identification.\r\n      pitcher1MustStart:\r\n        type: boolean\r\n        description: 'Baseball only. Refers to the pitcher for Team1. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'\r\n      pitcher2MustStart:\r\n        type: boolean\r\n        description: 'Baseball only. Refers to the pitcher for Team2. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'\r\n      sportId:\r\n        type: integer\r\n        format: int32\r\n        example: 29\r\n      eventId:\r\n        type: integer\r\n        format: int64\r\n        example: 757504261\r\n      periodNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 0\r\n      betType:\r\n        type: string\r\n        example: MONEYLINE\r\n        description: 'Bet type.'\r\n        enum:\r\n          - MONEYLINE\r\n          - TEAM_TOTAL_POINTS\r\n          - SPREAD\r\n          - TOTAL_POINTS\r\n      team:\r\n        type: string\r\n        example: TEAM1\r\n        description: 'Team type.'\r\n        enum:\r\n          - TEAM1\r\n          - TEAM2\r\n          - DRAW\r\n      side:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Side type.'\r\n        enum:\r\n          - OVER\r\n          - UNDER\r\n    description: Request to place a bet.\r\n  PlaceBetRequestV2:\r\n    type: object\r\n    properties:\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: D5CC50E4-284D-4D50-8D49-429BDC4F2A48\r\n        description: This is a Unique ID for PlaceBet requests. This is to support idempotent requests.\r\n      acceptBetterLine:\r\n        type: boolean\r\n        example: true\r\n        description: Whether or not to accept a bet when there is a line change in favor of the client.\r\n      stake:\r\n        type: number\r\n        format: double\r\n        example: 10.5\r\n        description: amount in client’s currency.\r\n      winRiskStake:\r\n        type: string\r\n        example: RISK\r\n        description: Whether the stake amount is risk or win amount.\r\n        enum:\r\n          - WIN\r\n          - RISK\r\n      lineId:\r\n        type: integer\r\n        format: int64\r\n        example: 420921914\r\n        description: Line identification.\r\n      altLineId:\r\n        type: integer\r\n        format: int64\r\n        example: null\r\n        x-nullable: true\r\n        description: Alternate line identification.\r\n      pitcher1MustStart:\r\n        type: boolean\r\n        description: 'Baseball only. Refers to the pitcher for Team1. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'\r\n      pitcher2MustStart:\r\n        type: boolean\r\n        description: 'Baseball only. Refers to the pitcher for Team2. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'\r\n      fillType:\r\n        type: string\r\n        description: |\r\n            NORMAL - bet will be placed on specified stake.  \r\n            FILLANDKILL - If the stake is over the max limit, bet will be placed on max limit, otherwise it will be placed on specified stake.  \r\n            FILLMAXLIMIT - bet will be places on max limit, stake amount will be ignored. Please note that maximum limits can change at any moment, which may result in risking more than anticipated. This option is replacement of isMaxStakeBet from v1/bets/place'\r\n        enum:\r\n          - NORMAL\r\n          - FILLANDKILL\r\n          - FILLMAXLIMIT\r\n        example: NORMAL\r\n        default: NORMAL        \r\n      sportId:\r\n        type: integer\r\n        format: int32\r\n        example: 29\r\n      eventId:\r\n        type: integer\r\n        format: int64\r\n        example: 757504261\r\n      periodNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 0\r\n      betType:\r\n        type: string\r\n        example: MONEYLINE\r\n        description: 'Bet type.'\r\n        enum:\r\n          - MONEYLINE\r\n          - TEAM_TOTAL_POINTS\r\n          - SPREAD\r\n          - TOTAL_POINTS\r\n      team:\r\n        type: string\r\n        example: TEAM1\r\n        description: 'Team type.'\r\n        enum:\r\n          - TEAM1\r\n          - TEAM2\r\n          - DRAW\r\n      side:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Side type.'\r\n        enum:\r\n          - OVER\r\n          - UNDER\r\n      handicap:\r\n        type: number\r\n        format: double\r\n        example: 1.0\r\n        description: This is optional parameter for SPREAD, TOTAL_POINTS and TEAM_TOTAL_POINTS bet types.          \r\n    description: Request to place a bet.        \r\n  PlaceBetResponse:\r\n    type: object\r\n    properties:\r\n      status:\r\n        type: string\r\n        example: ACCEPTED\r\n        description: Status of the response.\r\n        enum:\r\n          - ACCEPTED\r\n          - PENDING_ACCEPTANCE\r\n          - PROCESSED_WITH_ERROR\r\n      errorCode:\r\n        type: string\r\n        description: |\r\n          If Status is PROCESSED_WITH_ERROR, errorCode will be in the response. \r\n          \r\n          \r\n          ALL_BETTING_CLOSED = Betting is not allowed at this moment. This may happen during system maintenance,  \r\n          ALL_LIVE_BETTING_CLOSED = Live betting is not allowed at this moment. This may happen during system maintenance,  \r\n          ABOVE_EVENT_MAX = Bet cannot be placed because client exceeded allowed maximum of risk on a line,  \r\n          ABOVE_MAX_BET_AMOUNT = Stake is above allowed maximum amount,  \r\n          BELOW_MIN_BET_AMOUNT = Stake is below allowed minimum amount,  \r\n          BLOCKED_BETTING = Betting is suspended for the client,  \r\n          BLOCKED_CLIENT = Client is no longer active,  \r\n          INSUFFICIENT_FUNDS = Bet is submitted by a client with insufficient funds,  \r\n          INVALID_COUNTRY = Client country is not allowed for betting,  \r\n          INVALID_EVENT = Invalid eventid,  \r\n          INVALID_ODDS_FORMAT = If a bet was submitted with the odds format that is not allowed for the client,  \r\n          LINE_CHANGED = Bet is submitted on a line that has changed,  \r\n          LISTED_PITCHERS_SELECTION_ERROR = If bet was submitted with pitcher1MustStart and/or pitcher2MustStart parameters in Place Bet request with values that are not allowed,  \r\n          OFFLINE_EVENT = Bet is submitted on a event that is offline or the submitted line is not offered at the moment due to points/handicap change or the submitted bet type is just not offered at the moment,  \r\n          PAST_CUTOFFTIME = Bet is submitted on a game after the betting cutoff time,  \r\n          RED_CARDS_CHANGED = Bet is submitted on a live soccer event with changed red card count,  \r\n          SCORE_CHANGED = Bet is submitted on a live soccer event with changed score, \r\n          DUPLICATE_UNIQUE_REQUEST_ID = REquest with the same uniqueRequestId was already processed. Please set the new value if you still want the request to be processed,  \r\n          INCOMPLETE_CUSTOMER_BETTING_PROFILE = System configuration issue,  \r\n          INVALID_CUSTOMER_PROFILE = System configuration issue,   \r\n          LIMITS_CONFIGURATION_ISSUE = System configuration issue,   \r\n          RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Client has reached his total loss limit,  \r\n          RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Client has reached his total risk limit,  \r\n          RESUBMIT_REQUEST = Unable to process the request but the request itself is valid. This happens more often on the live betting in situations when there is more than one place bet request at the same on the same line. When this happens, we don't keep the place bet request on the server until we know if we can accept or reject the bet, but instead we return the error. It's very likely that the line will change after that. To reduce a chance of getting RESUBMIT_REQUEST client can try to place a bet as fast as possible,  \r\n          SYSTEM_ERROR_3 = Unexpected error,  \r\n        enum:\r\n          - ALL_BETTING_CLOSED\r\n          - ALL_LIVE_BETTING_CLOSED\r\n          - ABOVE_EVENT_MAX\r\n          - ABOVE_MAX_BET_AMOUNT\r\n          - BELOW_MIN_BET_AMOUNT\r\n          - BLOCKED_BETTING\r\n          - BLOCKED_CLIENT\r\n          - INSUFFICIENT_FUNDS\r\n          - INVALID_COUNTRY\r\n          - INVALID_EVENT\r\n          - INVALID_ODDS_FORMAT\r\n          - LINE_CHANGED\r\n          - LISTED_PITCHERS_SELECTION_ERROR\r\n          - OFFLINE_EVENT\r\n          - PAST_CUTOFFTIME\r\n          - RED_CARDS_CHANGED\r\n          - SCORE_CHANGED         \r\n          - DUPLICATE_UNIQUE_REQUEST_ID\r\n          - INCOMPLETE_CUSTOMER_BETTING_PROFILE\r\n          - INVALID_CUSTOMER_PROFILE\r\n          - LIMITS_CONFIGURATION_ISSUE\r\n          - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\r\n          - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\r\n          - RESUBMIT_REQUEST\r\n          - SYSTEM_ERROR_3\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        description: The bet ID of the new bet. May be empty on failure.\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: A9EB2EB1-13A5-4600-9F1B-4859379CDEC4\r\n        description: Echo of the uniqueRequestId from the request.\r\n      betterLineWasAccepted:\r\n        type: boolean\r\n        description: \"Whether or not the bet was accepted on the line that changed in favour of client.\\r\\nThis can be true only if acceptBetterLine in the Place Bet request is set to TRUE.\"\r\n      price:\r\n        type: number\r\n        format: double\r\n        description: 'For accepted bets, this will have the price at which the wager is accepted'\r\n    description: ''\r\n  ErrorResponse:\r\n    type: object\r\n    properties:\r\n      code:\r\n        type: string\r\n        description: |\r\n          INVALID_REQUEST_DATA  = Invalid request parameters (http status 400)  \r\n          SELF_EXCLUSION = Client's account is self-excluded (http status 400)\r\n          TERMS_AND_CONDITIONS_NOT_ACCEPTED = Terms and Condidtions has not been accepted (http status 400)\r\n          INVALID_CREDENTIALS = Authorization failed, invalid credentials (http status 401)  \r\n          INVALID_AUTHORIZATION_HEADER = HTTP Authorization header is missing (http status 401) \r\n          ACCOUNT_INACTIVE = Client's account is not active  (http status 403)  \r\n          NO_API_ACCESS = Account not permitted to access the API  (http status 403) \r\n        enum:\r\n          - INVALID_REQUEST_DATA\r\n          - SELF_EXCLUSION\r\n          - TERMS_AND_CONDITIONS_NOT_ACCEPTED\r\n          - INVALID_CREDENTIALS\r\n          - INVALID_AUTHORIZATION_HEADER\r\n          - ACCOUNT_INACTIVE\r\n          - NO_API_ACCESS\r\n      message:\r\n        type: string\r\n  PlaceBetResponseV2:\r\n    type: object\r\n    properties:\r\n      status:\r\n        type: string\r\n        example: ACCEPTED\r\n        description: Status of the response.\r\n        enum:\r\n          - ACCEPTED\r\n          - PENDING_ACCEPTANCE\r\n          - PROCESSED_WITH_ERROR\r\n      errorCode:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: |\r\n          If Status is PROCESSED_WITH_ERROR, errorCode will be in the response. \r\n          \r\n          ALL_BETTING_CLOSED = Betting is not allowed at this moment. This may happen during system maintenance,  \r\n          ALL_LIVE_BETTING_CLOSED = Live betting is not allowed at this moment. This may happen during system maintenance,  \r\n          ABOVE_EVENT_MAX = Bet cannot be placed because client exceeded allowed maximum of risk on a line,  \r\n          ABOVE_MAX_BET_AMOUNT = Stake is above allowed maximum amount,   \r\n          BELOW_MIN_BET_AMOUNT = Stake is below allowed minimum amount,  \r\n          BLOCKED_BETTING = Betting is suspended for the client,  \r\n          BLOCKED_CLIENT = Client is no longer active,   \r\n          INSUFFICIENT_FUNDS = Bet is submitted by a client with insufficient funds,  \r\n          INVALID_COUNTRY = Client country is not allowed for betting,  \r\n          INVALID_EVENT = Invalid eventid,  \r\n          INVALID_ODDS_FORMAT = If a bet was submitted with the odds format that is not allowed for the client,  \r\n          LINE_CHANGED = Bet is submitted on a line that has changed,  \r\n          LISTED_PITCHERS_SELECTION_ERROR = If bet was submitted with pitcher1MustStart and/or pitcher2MustStart parameters in Place Bet request with values that are not allowed,  \r\n          OFFLINE_EVENT = Bet is submitted on a event that is offline or the submitted line is not offered at the moment due to points/handicap change or the submitted bet type is just not offered at the moment,  \r\n          PAST_CUTOFFTIME = Bet is submitted on a game after the betting cutoff time,  \r\n          RED_CARDS_CHANGED = Bet is submitted on a live soccer event with changed red card count,  \r\n          SCORE_CHANGED = Bet is submitted on a live soccer event with changed score,             \r\n          DUPLICATE_UNIQUE_REQUEST_ID = Request with the same uniqueRequestId was already processed. Please set the new value if you still want the request to be processed,  \r\n          INCOMPLETE_CUSTOMER_BETTING_PROFILE = System configuration issue,  \r\n          INVALID_CUSTOMER_PROFILE = System configuration issue,  \r\n          LIMITS_CONFIGURATION_ISSUE = System configuration issue,  \r\n          RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Client has reached his total loss limit,  \r\n          RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Client has reached his total risk limit,  \r\n          RESUBMIT_REQUEST = Unable to process the request but the request itself is valid. This happens more often on the live betting in situations when there is more than one place bet request at the same on the same line. When this happens, we don't keep the place bet request on the server until we know if we can accept or reject the bet, but instead we return the error. It's very likely that the line will change after that. To reduce a chance of getting RESUBMIT_REQUEST client can try to place a bet as fast as possible,  \r\n          SYSTEM_ERROR_3 = Unexpected error,  \r\n          LICENCE_RESTRICTION_LIVE_BETTING_BLOCKED - Live betting blocked due to licence restrictions,\r\n          INVALID_HANDICAP = Invalid handicap\r\n        enum:\r\n          - ALL_BETTING_CLOSED\r\n          - ALL_LIVE_BETTING_CLOSED\r\n          - ABOVE_EVENT_MAX\r\n          - ABOVE_MAX_BET_AMOUNT\r\n          - BELOW_MIN_BET_AMOUNT\r\n          - BLOCKED_BETTING\r\n          - BLOCKED_CLIENT\r\n          - INSUFFICIENT_FUNDS\r\n          - INVALID_COUNTRY\r\n          - INVALID_EVENT\r\n          - INVALID_ODDS_FORMAT\r\n          - LINE_CHANGED\r\n          - LISTED_PITCHERS_SELECTION_ERROR\r\n          - OFFLINE_EVENT\r\n          - PAST_CUTOFFTIME\r\n          - RED_CARDS_CHANGED\r\n          - SCORE_CHANGED          \r\n          - DUPLICATE_UNIQUE_REQUEST_ID\r\n          - INCOMPLETE_CUSTOMER_BETTING_PROFILE\r\n          - INVALID_CUSTOMER_PROFILE\r\n          - LIMITS_CONFIGURATION_ISSUE\r\n          - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\r\n          - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\r\n          - RESUBMIT_REQUEST\r\n          - SYSTEM_ERROR_3\r\n          - LICENCE_RESTRICTION_LIVE_BETTING_BLOCKED\r\n          - INVALID_HANDICAP\r\n      uniqueRequestId:\r\n        type: string\r\n        example: D5CC50E4-284D-4D50-8D49-429BDC4F2A4\r\n        description: Echo of the uniqueRequestId from the request.\r\n      straightBet:\r\n        $ref: '#/definitions/StraightBet'\r\n    description: ''\r\n  StraightBet:\r\n    type: object\r\n    required:\r\n      - betId\r\n      - betStatus\r\n      - betType\r\n      - oddsFormat\r\n      - placedAt\r\n      - risk\r\n      - updateSequence\r\n      - wagerNumber\r\n      - win\r\n    properties:\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        example: 759629245\r\n        description: Bet identification\r\n      wagerNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 1\r\n        description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\r\n      placedAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-05T01:32:59Z'\r\n        description: Date time when the bet was placed.\r\n      betStatus:\r\n        type: string\r\n        example: ACCEPTED\r\n        description: |\r\n          Bet Status.  \r\n          \r\n          ACCEPTED = Bet was accepted,  \r\n          CANCELLED = Bet is cancelled as per Pinnacle betting rules,  \r\n          LOSE = The bet is settled as lose,  \r\n          PENDING_ACCEPTANCE = This status is reserved only for live bets. If a live bet is placed during danger zone or live delay is applied, it will be in PENDING_ACCEPTANCE , otherwise in ACCEPTED status. From this status bet can go to ACCEPTED or NOT_ACCEPTED status,  \r\n          REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status,  \r\n          NOT_ACCEPTED = Bet was not accepted. Bet can be in this status only if it was previously in PENDING_ACCEPTANCE status,  \r\n          WON = The bet is settled as won \r\n        enum:\r\n          - ACCEPTED\r\n          - CANCELLED\r\n          - LOSE\r\n          - PENDING_ACCEPTANCE\r\n          - REFUNDED\r\n          - NOT_ACCEPTED\r\n          - WON\r\n      betType:\r\n        type: string\r\n        example: MONEYLINE\r\n        description: 'Bet type.'\r\n        enum:\r\n          - MONEYLINE\r\n          - TEAM_TOTAL_POINTS\r\n          - SPREAD\r\n          - TOTAL_POINTS\r\n          - SPECIAL\r\n          - PARLAY\r\n          - TEASER\r\n          - MANUAL\r\n      win:\r\n        type: number\r\n        format: double\r\n        example: 1\r\n        description: Win amount.\r\n      risk:\r\n        type: number\r\n        format: double\r\n        example: 1.5\r\n        description: Risk amount.\r\n      winLoss:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Win-Loss for settled bets.\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      customerCommission:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Client’s commission on the bet.\r\n      cancellationReason:\r\n        $ref: '#/definitions/CancellationReason'\r\n      updateSequence:\r\n        type: integer\r\n        format: int64\r\n        example: 111548915\r\n        description: Update Sequence\r\n      sportId:\r\n        type: integer\r\n        format: int32\r\n        example: 29\r\n        description: ''\r\n      leagueId:\r\n        type: integer\r\n        format: int32\r\n        example: 2462\r\n        description: ''\r\n      eventId:\r\n        type: integer\r\n        format: int64\r\n        example: 757064557\r\n        description: ''\r\n      handicap:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: ''\r\n      price:\r\n        type: number\r\n        format: double\r\n        example: -155\r\n        description: ''\r\n      teamName:\r\n        type: string\r\n        example: Crvena Zvezda\r\n        description: ''\r\n      side:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Side type.'\r\n        enum:\r\n          - OVER\r\n          - UNDER\r\n      pitcher1:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Pitcher name of team1. Only for bets on baseball.'\r\n      pitcher2:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Pitcher name of team2. Only for bets on baseball.'\r\n      pitcher1MustStart:\r\n        type: string\r\n        enum:\r\n          - TRUE\r\n          - FALSE\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Whether the team1 pitcher must start. Only for bets on baseball.'\r\n      pitcher2MustStart:\r\n        type: string\r\n        enum:\r\n          - TRUE\r\n          - FALSE\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Whether the team1 pitcher must start. Only for bets on baseball.'\r\n      team1:\r\n        type: string\r\n        example: Crvena Zvezda\r\n        description: ''\r\n      team2:\r\n        type: string\r\n        example: Partizan\r\n        description: ''\r\n      periodNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 0\r\n        description: ''\r\n      team1Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Team 1 score that the bet was placed on, only for live bets.'\r\n      team2Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Team 2 score that the bet was placed, only for live bets.'\r\n      ftTeam1Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Full time team 1 score, only for settled bets.'\r\n      ftTeam2Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Full time team 2 score, only for settled bets.'\r\n      pTeam1Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: '.End of period team 1 score, only for settled bets. If the bet was placed on Game period (periodNumber =0) , this will be null . '\r\n      pTeam2Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: 'End of period team 2 score, only for settled bets. If the bet was placed on Game period (periodNumber =0) , this will be null'\r\n      isLive:\r\n        type: string\r\n        enum:\r\n          - TRUE\r\n          - FALSE\r\n        example: \"FALSE\"\r\n        description: Whether the bet is on live event\r\n    description: ''\r\n  StraightBetV3:\r\n      type: object\r\n      required:\r\n        - betId\r\n        - betStatus\r\n        - betType\r\n        - oddsFormat\r\n        - placedAt\r\n        - risk\r\n        - updateSequence\r\n        - wagerNumber\r\n        - win\r\n      properties:\r\n        betId:\r\n          type: integer\r\n          format: int64\r\n          example: 759629245\r\n          description: Bet identification\r\n        wagerNumber:\r\n          type: integer\r\n          format: int32\r\n          example: 1\r\n          description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\r\n        placedAt:\r\n          type: string\r\n          format: date-time\r\n          example: '2017-09-05T01:32:59Z'\r\n          description: Date time when the bet was placed.\r\n        settledAt:\r\n          type: string\r\n          format: date-time\r\n          example: '2017-09-05T01:32:59Z'\r\n          description: Date time when the bet was settled.\r\n        betStatus:\r\n          type: string\r\n          example: ACCEPTED\r\n          description: |\r\n            Bet Status.  \r\n            \r\n            ACCEPTED = Bet was accepted,  \r\n            CANCELLED = Bet is cancelled as per Pinnacle betting rules,  \r\n            LOSE = The bet is settled as lose,  \r\n            PENDING_ACCEPTANCE = This status is reserved only for live bets. If a live bet is placed during danger zone or live delay is applied, it will be in PENDING_ACCEPTANCE , otherwise in ACCEPTED status. From this status bet can go to ACCEPTED or NOT_ACCEPTED status,  \r\n            REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status,  \r\n            NOT_ACCEPTED = Bet was not accepted. Bet can be in this status only if it was previously in PENDING_ACCEPTANCE status,  \r\n            WON = The bet is settled as won,  \r\n            REJECTED = Bet is rejected\r\n          enum:\r\n            - ACCEPTED\r\n            - CANCELLED\r\n            - LOSE\r\n            - PENDING_ACCEPTANCE\r\n            - REFUNDED\r\n            - NOT_ACCEPTED\r\n            - WON\r\n            - REJECTED\r\n        betType:\r\n          type: string\r\n          example: MONEYLINE\r\n          description: 'Bet type.'\r\n          enum:\r\n            - MONEYLINE\r\n            - TEAM_TOTAL_POINTS\r\n            - SPREAD\r\n            - TOTAL_POINTS\r\n            - SPECIAL\r\n            - PARLAY\r\n            - TEASER\r\n            - MANUAL\r\n        win:\r\n          type: number\r\n          format: double\r\n          example: 1\r\n          description: Win amount.\r\n        risk:\r\n          type: number\r\n          format: double\r\n          example: 1.5\r\n          description: Risk amount.\r\n        winLoss:\r\n          type: number\r\n          format: double\r\n          example: null\r\n          x-nullable: true\r\n          description: Win-Loss for settled bets.\r\n        oddsFormat:\r\n          $ref: '#/definitions/OddsFormat'\r\n        customerCommission:\r\n          type: number\r\n          format: double\r\n          example: null\r\n          x-nullable: true\r\n          description: Client’s commission on the bet.\r\n        cancellationReason:\r\n          $ref: '#/definitions/CancellationReason'\r\n        updateSequence:\r\n          type: integer\r\n          format: int64\r\n          example: 111548915\r\n          description: Update Sequence\r\n        sportId:\r\n          type: integer\r\n          format: int32\r\n          example: 29\r\n          description: ''\r\n        leagueId:\r\n          type: integer\r\n          format: int32\r\n          example: 2462\r\n          description: ''\r\n        eventId:\r\n          type: integer\r\n          format: int64\r\n          example: 757064557\r\n          description: ''\r\n        handicap:\r\n          type: number\r\n          format: double\r\n          example: null\r\n          x-nullable: true\r\n          description: ''\r\n        price:\r\n          type: number\r\n          format: double\r\n          example: -155\r\n          description: ''\r\n        teamName:\r\n          type: string\r\n          example: Crvena Zvezda\r\n          description: ''\r\n        side:\r\n          type: string\r\n          example: null\r\n          x-nullable: true\r\n          description: 'Side type.'\r\n          enum:\r\n            - OVER\r\n            - UNDER\r\n        pitcher1:\r\n          type: string\r\n          example: null\r\n          x-nullable: true\r\n          description: 'Pitcher name of team1. Only for bets on baseball.'\r\n        pitcher2:\r\n          type: string\r\n          example: null\r\n          x-nullable: true\r\n          description: 'Pitcher name of team2. Only for bets on baseball.'\r\n        pitcher1MustStart:\r\n          type: boolean\r\n          example: false\r\n          description: 'Baseball only. Refers to the pitcher for Team1.  This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'  \r\n          x-nullable: true\r\n        pitcher2MustStart:\r\n          type: boolean\r\n          example: false\r\n          description: 'Baseball only. Refers to the pitcher for Team2.  This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'  \r\n          x-nullable: true  \r\n        team1:\r\n          type: string\r\n          example: Crvena Zvezda\r\n          description: ''\r\n        team2:\r\n          type: string\r\n          example: Partizan\r\n          description: ''\r\n        periodNumber:\r\n          type: integer\r\n          format: int32\r\n          example: 0\r\n          description: ''\r\n        team1Score:\r\n          type: number\r\n          format: double\r\n          example: null\r\n          x-nullable: true\r\n          description: 'Team 1 score that the bet was placed on, only for live bets.'\r\n        team2Score:\r\n          type: number\r\n          format: double\r\n          example: null\r\n          x-nullable: true\r\n          description: 'Team 2 score that the bet was placed, only for live bets.'\r\n        ftTeam1Score:\r\n          type: number\r\n          format: double\r\n          example: null\r\n          x-nullable: true\r\n          description: 'Full time team 1 score, only for settled bets.'\r\n        ftTeam2Score:\r\n          type: number\r\n          format: double\r\n          example: null\r\n          x-nullable: true\r\n          description: 'Full time team 2 score, only for settled bets.'\r\n        pTeam1Score:\r\n          type: number\r\n          format: double\r\n          example: null\r\n          x-nullable: true\r\n          description: '.End of period team 1 score, only for settled bets. If the bet was placed on Game period (periodNumber =0) , this will be null . '\r\n        pTeam2Score:\r\n          type: number\r\n          format: double\r\n          example: null\r\n          x-nullable: true\r\n          description: 'End of period team 2 score, only for settled bets. If the bet was placed on Game period (periodNumber =0) , this will be null'\r\n        isLive:\r\n          type: boolean\r\n          example: false\r\n          description: Whether the bet is on live event\r\n        eventStartTime:\r\n          type: string \r\n          format: date-time\r\n          example: 2017-10-05T01:32:59Z\r\n          x-nullable: false\r\n          description: 'Date time when the event starts.'\r\n      description: ''    \r\n  CancellationReason:\r\n    type: object\r\n    required:\r\n      - code\r\n    properties:\r\n      code:\r\n        type: string\r\n        example: FBS_CW_227\r\n      details:\r\n          $ref: '#/definitions/CancellationDetails'\r\n    description: |  \r\n                Possible keys \\:  \r\n                * correctTeam1Id\r\n                * correctTeam2Id\r\n                * correctListedPitcher1\r\n                * correctListedPitcher2\r\n                * correctSpread\r\n                * correctTotalPoints\r\n                * correctTeam1TotalPoints\r\n                * correctTeam2TotalPoints\r\n                * correctTeam1Score\r\n                * correctTeam2Score\r\n                * correctTeam1TennisSetsScore\r\n                * correctTeam2TennisSetsScore\r\n  CancellationDetails:\r\n    type: array\r\n    items:\r\n      - $ref: \"#/definitions/CancellationDetailsItem\"\r\n    example:  [\r\n                    {\r\n                        \"key\": \"correctSpread\",\r\n                        \"value\": \"-1.5\"\r\n                    }\r\n                ]\r\n  CancellationDetailsItem:\r\n    type: object\r\n    properties:\r\n      key:\r\n        type: string\r\n        example: correctSpread  \r\n      value:\r\n        type: string  \r\n        example: \"1.5\"    \r\n  ErrorResponseWithErrorRef:\r\n    type: object\r\n    properties:\r\n      ref:\r\n        type: string\r\n        example: f5d9ba85-cc97-47a9-ad92-ea57d0ea2cc0\r\n      code:\r\n        type: string\r\n        example: UNEXPECTED_ERROR\r\n      message:\r\n        type: string\r\n        example: Internal error\r\n  PlaceParlayBetRequest:\r\n    type: object\r\n    properties:\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: A9EB2EB1-13A5-4600-9F1B-4859379CDEC4\r\n        description: This unique id of the place bet requests. This is to support idempotent requests.\r\n      acceptBetterLine:\r\n        type: boolean\r\n        example: true\r\n        description: Whether or not to accept a bet when there is a line change in favor of the client.\r\n      riskAmount:\r\n        type: number\r\n        format: double\r\n        example: 10.5\r\n        description: 'Amount in client’s currency. It is always risk amount when placing Parlay bets NOTE: If round robin options is used this amount will apply for all parlays so actual amount wagered will be riskAmount X number of Parlays.'\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      legs:\r\n        type: array\r\n        description: Collection of parlay legs.\r\n        items:\r\n          $ref: '#/definitions/ParlayLegRequest'\r\n      roundRobinOptions:\r\n        type: array\r\n        description: ''\r\n        items:\r\n          type: string\r\n          enum:\r\n            - Parlay\r\n            - TwoLegRoundRobin\r\n            - ThreeLegRoundRobin\r\n            - FourLegRoundRobin\r\n            - FiveLegRoundRobin\r\n            - SixLegRoundRobin\r\n            - SevenLegRoundRobin\r\n            - EightLegRoundRobin\r\n    description: Request to place a bet\r\n  ParlayLegRequest:\r\n    type: object\r\n    properties:\r\n      uniqueLegId:\r\n        type: string\r\n        example: CFAD8ACF-E410-437C-8F0F-33611F565981\r\n        description: Unique id of the leg. It's used to identify and match legs in the response.\r\n      lineId:\r\n        type: integer\r\n        format: int64\r\n        example: 419715968\r\n        description: Line identification.\r\n      altLineId:\r\n        type: integer\r\n        format: int64\r\n        example: null\r\n        x-nullable: true\r\n        description: Alternate line identification.\r\n      pitcher1MustStart:\r\n        type: boolean\r\n        example: false\r\n        description: 'Baseball only. Refers to the pitcher for Team1.  This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'\r\n      pitcher2MustStart:\r\n        type: boolean\r\n        example: false\r\n        description: 'Baseball only. Refers to the pitcher for Team2. This applicable only for MONEYLINE bet type, for all other bet types this has to be TRUE.'\r\n      sportId:\r\n        type: integer\r\n        format: int32\r\n        example: 29\r\n        description: Sport identification.\r\n      eventId:\r\n        type: integer\r\n        format: int64\r\n        example: 758023991\r\n        description: Event identification.\r\n      periodNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 0\r\n        description: 'This represents the period of the match. For example, for soccer we have: 0 -  Game, 1 - 1st Half and 2 - 2nd Half'\r\n      legBetType:\r\n        type: string\r\n        example: MONELYLINE\r\n        description: 'Only SPREAD, MONEYLINE and TOTAL_POINTS are supported.'\r\n        enum:\r\n          - MONEYLINE\r\n          - SPREAD\r\n          - TOTAL_POINTS\r\n      team:\r\n        type: string\r\n        example: TEAM1\r\n        description: Chosen team type. This is needed only for SPREAD and MONEYLINE bet types.\r\n      side:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Chosen side type. This is needed only for TOTAL_POINTS bet type.'\r\n        enum:\r\n          - OVER\r\n          - UNDER\r\n    description: ''\r\n  PlaceParlayBetResponse:\r\n    type: object\r\n    properties:\r\n      status:\r\n        type: string\r\n        example: ACCEPTED\r\n        description: Status of the response.\r\n        enum:\r\n          - ACCEPTED\r\n          - PROCESSED_WITH_ERROR\r\n      errorCode:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: | \r\n          When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.\r\n          \r\n          \r\n          ABOVE_MAX_BET_AMOUNT = Stake is above allowed maximum amount,  \r\n          ALL_BETTING_CLOSED = Betting is not allowed at this moment,  \r\n          BELOW_MIN_BET_AMOUNT = Stake is below allowed minimum amount,  \r\n          BLOCKED_BETTING = Betting is suspended for the client,   \r\n          BLOCKED_CLIENT = Client is no longer active,  \r\n          INSUFFICIENT_FUNDS = Bet is submitted by a client with insufficient funds,  \r\n          INVALID_COUNTRY = Client country is not allowed for betting,  \r\n          INVALID_LEGS = One or more legs are invalid,  \r\n          INVALID_ODDS_FORMAT = If a bet was submitted with the odds format that is not allowed for the client,  \r\n          INVALID_ROUND_ROBIN_OPTIONS = Round robin options are invalid (i.e. does not match with number of legs),  \r\n          ROUND_ROBIN_DISALLOWED = Round robin is disallowed for one of the leagues,  \r\n          TOO_MANY_LEGS = Maximum of 10 legs can be specified,  \r\n          TOO_FEW_LEGS = At least 2 legs are required for Parlay,  \r\n          RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Client has reached his total loss limit,  \r\n          RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Client has reached his total risk limit,  \r\n          INVALID_REQUEST = Request has invalid parameters,  \r\n          DUPLICATE_UNIQUE_REQUEST_ID = Request with the same uniqueRequestId was already processed. Please set the new value if you still want the request to be processed,  \r\n          SYSTEM_ERROR_3 = Unexpected error \r\n        enum:\r\n          - ABOVE_MAX_BET_AMOUNT\r\n          - ALL_BETTING_CLOSED\r\n          - BELOW_MIN_BET_AMOUNT\r\n          - BLOCKED_BETTING\r\n          - BLOCKED_CLIENT\r\n          - INSUFFICIENT_FUNDS\r\n          - INVALID_COUNTRY\r\n          - INVALID_LEGS\r\n          - INVALID_ODDS_FORMAT\r\n          - INVALID_ROUND_ROBIN_OPTIONS\r\n          - ROUND_ROBIN_DISALLOWED\r\n          - TOO_MANY_LEGS\r\n          - TOO_FEW_LEGS\r\n          - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\r\n          - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\r\n          - INVALID_REQUEST\r\n          - DUPLICATE_UNIQUE_REQUEST_ID\r\n          - SYSTEM_ERROR_3\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        example: 759629245\r\n        description: Id of a newly created bet.\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: D5CC50E4-284D-4D50-8D49-429BDC4F2A48\r\n        description: Unique identifier provided in the request.\r\n      roundRobinOptionWithOdds:\r\n        type: array\r\n        description: Provides array with all acceptable Round Robin options with parlay odds for that option.\r\n        items:\r\n          $ref: '#/definitions/RoundRobinOptionWithOdds'\r\n      maxRiskStake:\r\n        type: number\r\n        format: double\r\n        description: Maximum stake amount\r\n      minRiskStake:\r\n        type: number\r\n        format: double\r\n        description: Minimum stake amount\r\n      validLegs:\r\n        type: array\r\n        description: Collection of valid legs (format described below). Can be empty if no valid legs found.\r\n        items:\r\n          $ref: '#/definitions/ParlayLegResponse'\r\n      invalidLegs:\r\n        type: array\r\n        description: The collection of legs that resulted in error (format described below). Can be empty if no invalid legs found.\r\n        items:\r\n          $ref: '#/definitions/ParlayLegResponse'\r\n    description: ''\r\n  PlaceParlayBetResponseV2:\r\n    type: object\r\n    properties:\r\n      status:\r\n        type: string\r\n        example: ACCEPTED\r\n        description: Status of the response.\r\n        enum:\r\n          - ACCEPTED\r\n          - PROCESSED_WITH_ERROR\r\n      errorCode:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: | \r\n          When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.\r\n          \r\n          \r\n          ABOVE_MAX_BET_AMOUNT = Stake is above allowed maximum amount,  \r\n          ALL_BETTING_CLOSED = Betting is not allowed at this moment,  \r\n          BELOW_MIN_BET_AMOUNT = Stake is below allowed minimum amount,  \r\n          BLOCKED_BETTING = Betting is suspended for the client,   \r\n          BLOCKED_CLIENT = Client is no longer active,  \r\n          INSUFFICIENT_FUNDS = Bet is submitted by a client with insufficient funds,  \r\n          INVALID_COUNTRY = Client country is not allowed for betting,  \r\n          INVALID_LEGS = One or more legs are invalid,  \r\n          INVALID_ODDS_FORMAT = If a bet was submitted with the odds format that is not allowed for the client,  \r\n          INVALID_ROUND_ROBIN_OPTIONS = Round robin options are invalid (i.e. does not match with number of legs),  \r\n          ROUND_ROBIN_DISALLOWED = Round robin is disallowed for one of the leagues,  \r\n          TOO_MANY_LEGS = Maximum of 10 legs can be specified,  \r\n          TOO_FEW_LEGS = At least 2 legs are required for Parlay,  \r\n          RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Client has reached his total loss limit,  \r\n          RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Client has reached his total risk limit,  \r\n          INVALID_REQUEST = Request has invalid parameters,  \r\n          DUPLICATE_UNIQUE_REQUEST_ID = Request with the same uniqueRequestId was already processed. Please set the new value if you still want the request to be processed,  \r\n          SYSTEM_ERROR_3 = Unexpected error \r\n        enum:\r\n          - ABOVE_MAX_BET_AMOUNT\r\n          - ALL_BETTING_CLOSED\r\n          - BELOW_MIN_BET_AMOUNT\r\n          - BLOCKED_BETTING\r\n          - BLOCKED_CLIENT\r\n          - INSUFFICIENT_FUNDS\r\n          - INVALID_COUNTRY\r\n          - INVALID_LEGS\r\n          - INVALID_ODDS_FORMAT\r\n          - INVALID_ROUND_ROBIN_OPTIONS\r\n          - ROUND_ROBIN_DISALLOWED\r\n          - TOO_MANY_LEGS\r\n          - TOO_FEW_LEGS\r\n          - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\r\n          - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\r\n          - INVALID_REQUEST\r\n          - DUPLICATE_UNIQUE_REQUEST_ID\r\n          - SYSTEM_ERROR_3\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        example: 759629245\r\n        description: Id of a newly created bet.\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: D5CC50E4-284D-4D50-8D49-429BDC4F2A48\r\n        description: Unique identifier provided in the request.\r\n      roundRobinOptionWithOdds:\r\n        type: array\r\n        description: Provides array with all acceptable Round Robin options with parlay odds for that option.\r\n        items:\r\n          $ref: '#/definitions/RoundRobinOptionWithOdds'\r\n      maxRiskStake:\r\n        type: number\r\n        format: double\r\n        description: Maximum stake amount\r\n      minRiskStake:\r\n        type: number\r\n        format: double\r\n        description: Minimum stake amount\r\n      validLegs:\r\n        type: array\r\n        description: Collection of valid legs (format described below). Can be empty if no valid legs found.\r\n        items:\r\n          $ref: '#/definitions/ParlayLegResponse'\r\n      invalidLegs:\r\n        type: array\r\n        description: The collection of legs that resulted in error (format described below). Can be empty if no invalid legs found.\r\n        items:\r\n          $ref: '#/definitions/ParlayLegResponse'\r\n      parlayBet:\r\n        $ref: '#/definitions/ParlayBet'\t\t\r\n    description: ''\t\r\n  RoundRobinOptionWithOdds:\r\n    type: object\r\n    properties:\r\n      roundRobinOption:\r\n        type: string\r\n        example: Parlay\r\n        description: ''\r\n        enum:\r\n          - Parlay\r\n          - TwoLegRoundRobin\r\n          - ThreeLegRoundRobin\r\n          - FourLegRoundRobin\r\n          - FiveLegRoundRobin\r\n          - SixLegRoundRobin\r\n          - SevenLegRoundRobin\r\n          - EightLegRoundRobin\r\n      odds:\r\n        type: number\r\n        format: double\r\n        example: 682\r\n        description: Parlay odds for this option.\r\n      unroundedDecimalOdds:\r\n        type: number\r\n        format: double\r\n        example: 7.8231\r\n        description: Unrounded parlay odds in decimal format to be used for calculations only\r\n    description: ''\r\n  ParlayLegResponse:\r\n    type: object\r\n    properties:\r\n      status:\r\n        type: string\r\n        example: VALID\r\n        description: Status of the request.\r\n        enum:\r\n          - PROCESSED_WITH_ERROR\r\n          - VALID\r\n      errorCode:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: |\r\n            When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.\r\n            \r\n            CANNOT_PARLAY_LIVE_GAME = The wager is placed on Live game,  \r\n            CORRELATED = The leg is correlated with another one,  \r\n            EVENT_NO_LONGER_AVAILABLE_FOR_BETTING = The event is no longer offered,  \r\n            EVENT_NOT_OFFERED_FOR_PARLAY = The event is not offered for parlaying,  \r\n            INVALID_EVENT = Live betting is not allowed at this moment,  \r\n            INVALID_LEG_BET_TYPE = Leg bet type is not accepted for parlaying. Accepted values are SPREAD, MONEYLINE, TOTAL_POINTS,  \r\n            INVALID_PARLAY_BET = The leg did not validated due to error on Parlay Bet. Check the error PlaceParlayBet response for error details,  \r\n            LINE_CHANGED = Bet is submitted on a line that has changed,  \r\n            LINE_DOES_NOT_BELONG_TO_EVENT = LineId does not match the EventId specified in the request,  \r\n            LISTED_PITCHERS_SELECTION_ERROR = If bet was submitted with pitcher1MustStart and/or pitcher2MustStart parameters with values that are not allowed,  \r\n            ODDS_NO_LONGER_OFFERED_FOR_PARLAY_1 = Due to line change odds are not offered for parlaying,   \r\n            ODDS_NO_LONGER_OFFERED_FOR_PARLAY_2 = Due to line change odds are not offered for parlaying,   \r\n            ODDS_NO_LONGER_OFFERED_FOR_PARLAY_3 = Due to line change odds are not offered for parlaying,   \r\n            OFFLINE_EVENT = Bet is submitted on an event that is offline or with incorrect lineId,  \r\n            PAST_CUTOFFTIME = Bet is submitted on a game after the betting cutoff time,   \r\n            SYSTEM_ERROR_1 = Unexpected error,  \r\n            SYSTEM_ERROR_2 = Unexpected error,  \r\n            SYSTEM_ERROR_3 = Unexpected error,  \r\n            LINE_IS_NOT_AVAILABLE = Line is not available for the specified Parlay Leg.\r\n            \r\n        enum:\r\n          - CANNOT_PARLAY_LIVE_GAME\r\n          - CORRELATED\r\n          - EVENT_NO_LONGER_AVAILABLE_FOR_BETTING\r\n          - EVENT_NOT_OFFERED_FOR_PARLAY\r\n          - INVALID_EVENT\r\n          - INVALID_LEG_BET_TYPE\r\n          - INVALID_PARLAY_BET\r\n          - LINE_CHANGED\r\n          - LINE_DOES_NOT_BELONG_TO_EVENT\r\n          - LISTED_PITCHERS_SELECTION_ERROR\r\n          - ODDS_NO_LONGER_OFFERED_FOR_PARLAY_1\r\n          - ODDS_NO_LONGER_OFFERED_FOR_PARLAY_2\r\n          - ODDS_NO_LONGER_OFFERED_FOR_PARLAY_3\r\n          - OFFLINE_EVENT\r\n          - PAST_CUTOFFTIME\r\n          - SYSTEM_ERROR_1\r\n          - SYSTEM_ERROR_2\r\n          - SYSTEM_ERROR_3\r\n          - LINE_IS_NOT_AVAILABLE\r\n      legId:\r\n        type: string\r\n        format: uuid\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: Echo of the legId from the request.\r\n      lineId:\r\n        type: integer\r\n        format: int64\r\n        example: 419715968\r\n        description: Line identification that bet was placed on.\r\n      altLineId:\r\n        type: integer\r\n        format: int64\r\n        example: null\r\n        x-nullable: true\r\n        description: 'If bet was accpepted on alternate line, the altLineId will be returned.'\r\n      price:\r\n        type: number\r\n        format: double\r\n        example: 167\r\n        description: Price that the bet was placed on.\r\n      correlatedLegs:\r\n        type: array\r\n        description: If errorCode is CORRELATED will contain legIds of all correlated legs.\r\n        items:\r\n          type: string\r\n          format: uuid\r\n          example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n    description: ''\r\n  ParlayBet:\r\n    type: object\r\n    required:\r\n      - betId\r\n      - betStatus\r\n      - betType\r\n      - legs\r\n      - oddsFormat\r\n      - placedAt\r\n      - risk\r\n      - updateSequence\r\n      - wagerNumber\r\n      - win\r\n    properties:\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        example: 760404490\r\n        description: Bet identification\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: Unique Request Id\r\n      wagerNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 1\r\n        description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\r\n      placedAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-08T00:55:11Z'\r\n        description: Date time when the bet was placed.\r\n      settledAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-05T01:32:59Z'\r\n        description: Date time when the bet was settled.\r\n      betStatus:\r\n        type: string\r\n        example: ACCEPTED\r\n        description: |\r\n          Bet Status. \r\n          \r\n          ACCEPTED = Bet was accepted,  \r\n          CANCELLED = Bet is cancelled as per Pinnacle betting rules,  \r\n          LOSE = The bet is settled as lose,  \r\n          PENDING_ACCEPTANCE = This status is reserved only for live bets. If a live bet is placed during danger zone or live delay is applied, it will be in PENDING_ACCEPTANCE , otherwise in ACCEPTED status. From this status bet can go to ACCEPTED or REJECTED status,  \r\n          REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status,  \r\n          NOT_ACCEPTED = Bet was not accepted. Bet can be in this status only if it was previously in PENDING_ACCEPTANCE status,  \r\n          WON = The bet is settled as won\r\n        enum:\r\n          - ACCEPTED\r\n          - CANCELLED\r\n          - LOSE\r\n          - PENDING_ACCEPTANCE\r\n          - REFUNDED\r\n          - NOT_ACCEPTED\r\n          - WON\r\n      betType:\r\n        type: string\r\n        default: PARLAY\r\n        example: PARLAY\r\n      win:\r\n        type: number\r\n        format: double\r\n        example: 6.82\r\n        description: Win amount.\r\n      risk:\r\n        type: number\r\n        format: double\r\n        example: 1\r\n        description: Risk amount.\r\n      winLoss:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Win-Loss for settled bets.\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      customerCommission:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Client’s commission on the bet.\r\n      cancellationReason:\r\n        $ref: '#/definitions/CancellationReason'\r\n      updateSequence:\r\n        type: integer\r\n        format: int64\r\n        example: 112839436\r\n        description: Update Sequence\r\n      legs:\r\n        type: array\r\n        description: ''\r\n        items:\r\n          $ref: '#/definitions/ParlayLeg'\r\n      price:\r\n        type: number\r\n        format: double\r\n        example: 682\r\n        description: ''\r\n      finalPrice:\r\n        type: number\r\n        format: double\r\n        example: 0\r\n        description: Only for settled parlay. Final price may differ in case leg was cancelled or half won\r\n    description: ''\r\n  ParlayLeg:\r\n    type: object\r\n    properties:\r\n      sportId:\r\n        type: integer\r\n        format: int32\r\n        example: 29\r\n        description: ''\r\n      legBetType:\r\n        type: string\r\n        example: MONEYLINE\r\n        description: 'Parlay leg type.'\r\n        enum:\r\n          - MONEYLINE\r\n          - SPREAD\r\n          - TOTAL_POINTS\r\n      legBetStatus:\r\n        type: string\r\n        description: | \r\n          Parlay Leg status.\r\n          CANCELLED = The leg is canceled- the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss,  \r\n          LOSE = The leg is a loss or a push-lose. When Push-lose happens, the half of the stake on the leg will be pushed to the next leg, and the other half will be a lose. This can happen only when the leg is placed on a quarter points handicap,  \r\n          PUSH = The leg is a push - the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss,  \r\n          REFUNDED = The leg is refunded - the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss,  \r\n          WON = The leg is a won or a push-won. When Push-won happens, the half of the stake on the leg will be pushed to the next leg, and the other half is won. This can happen only when the leg is placed on a quarter points handicap \r\n        enum:\r\n          - CANCELLED\r\n          - LOSE\r\n          - PUSH\r\n          - REFUNDED\r\n          - WON\r\n          - ACCEPTED\r\n      leagueId:\r\n        type: integer\r\n        format: int32\r\n        example: 1766\r\n        description: ''\r\n      eventId:\r\n        type: integer\r\n        format: int64\r\n        example: 758024079\r\n        description: ''\r\n      eventStartTime:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-10-07T21:00:00Z'\r\n        description: ''\r\n      handicap:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: ''\r\n      price:\r\n        type: number\r\n        format: double\r\n        example: 193\r\n        description: ''\r\n      teamName:\r\n        type: string\r\n        example: Adelaide United\r\n        description: ''\r\n      side:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: 'Side type.'\r\n        enum:\r\n          - OVER\r\n          - UNDER\r\n      pitcher1:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: ''\r\n      pitcher2:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: ''\r\n      pitcher1MustStart:\r\n        type: boolean\r\n        example: false\r\n        description: ''\r\n      pitcher2MustStart:\r\n        type: boolean\r\n        example: false\r\n        description: ''\r\n      team1:\r\n        type: string\r\n        description: Wellington Phoenix\r\n      team2:\r\n        type: string\r\n        description: Adelaide United\r\n      periodNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 0\r\n        description: ''\r\n      ftTeam1Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Full time team 1 score\r\n      ftTeam2Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Full time team 2 score\r\n      pTeam1Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: 'End of period team 1 score. If the bet was placed on Game period (periodNumber =0) , this will be null'\r\n      pTeam2Score:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: 'End of period team 2 score. If the bet was placed on Game period (periodNumber =0) , this will be null'\r\n      cancellationReason:\r\n        $ref: '#/definitions/CancellationReason'\r\n    description: ''\r\n  PlaceTeaserBetRequest:\r\n    type: object\r\n    properties:\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: Client generated GUID for uniquely identifying the bet.\r\n      teaserId:\r\n        type: integer\r\n        format: int32\r\n        description: Unique identifier. Teaser details can be retrieved from a call to Get Teaser Groups endpoint.\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      winRiskStake:\r\n        type: string\r\n        description: Whether the stake amount is risk or win amount.\r\n      stake:\r\n        type: number\r\n        format: double\r\n        description: amount in client’s currency.\r\n      legs:\r\n        type: array\r\n        description: Collection of legs.\r\n        items:\r\n          $ref: '#/definitions/TeaserBetLeg'\r\n    description: ''\r\n  TeaserBetLeg:\r\n    type: object\r\n    properties:\r\n      legId:\r\n        type: string\r\n        format: int64\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: Client generated GUID for uniquely identifying the leg.\r\n      betType:\r\n        type: string\r\n        example: SPREAD\r\n        description: 'Leg bet type can be SPREAD or TOTAL_POINTS '\r\n        enum:\r\n          - SPREAD\r\n          - TOTAL_POINTS\r\n      lineId:\r\n        type: integer\r\n        format: int64\r\n        description: Unique identifier.\r\n      eventId:\r\n        type: integer\r\n        format: int64\r\n        description: Unique identifier.\r\n      team:\r\n        type: string\r\n        description: Team being bet on for a spread line.\r\n      side:\r\n        type: string\r\n        description: 'Chosen side type. This is needed only for TOTAL_POINTS bet type.'\r\n        enum:\r\n          - OVER\r\n          - UNDER\r\n    description: ''\r\n  PlaceTeaserBetResponse:\r\n    type: object\r\n    properties:\r\n      status:\r\n        type: string\r\n        description: Status of the request.\r\n      errorCode:\r\n        type: string\r\n        description: |\r\n          When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.\r\n          \r\n          ABOVE_MAX_BET_AMOUNT = Bet is above the maximum allowed,  \r\n          ALL_BETTING_CLOSED = The wagering is disabled in the system (not related to a customer),  \r\n          BELOW_MIN_BET_AMOUNT = Bet is below the minimum allowed,  \r\n          BLOCKED_BETTING = Betting is suspended for the client,  \r\n          BLOCKED_CLIENT = Customer is inactive in the system,  \r\n          DOUBLE_HIT = The website submitted the same bet more than once,  \r\n          DUPLICATE_CLIENT_REFERENCE_ID = The teaser unique id and/or one of the leg unique id are the same,  \r\n          INCOMPLETE_CUSTOMER_BETTING_PROFILE = The customer does not exist,  \r\n          INSUFFICIENT_FUNDS = The risk amount is above the customer’s available balance,  \r\n          INVALID_COUNTRY = Current location is proscribed,  \r\n          INVALID_CUSTOMER_PROFILE = Either the customer does not exist OR the customer business rules are not verified,  \r\n          INVALID_LEGS = One or more legs are not verified,  \r\n          INVALID_REQUEST = Teaser request is not valid,  \r\n          ODDS_FORMAT_MISMATCH = Agent customer’s odds format differs from wager request odds format,  \r\n          RESUBMIT_REQUEST = The ticket hast to be resubmitted,  \r\n          TEASER_DOES_NOT_EXIST = Teaser does not exist in the system,  \r\n          SAME_EVENT_ONLY_REQUIRED = Legs required to be for the same game only. Specified in the Teaser Specifications,  \r\n          SYSTEM_ERROR_1 = System error,  \r\n          SYSTEM_ERROR_2 = System error,  \r\n          SYSTEM_ERROR_3 = System error,  \r\n          TOO_FEW_LEGS = Legs count is below Min Picks specified in the Teaser Specifications,  \r\n          TOO_MANY_LEGS = Legs count is above Max Picks specified in the Teaser Specifications,\r\n          DUPLICATE_UNIQUE_REQUEST_ID = Request with the same uniqueRequestId was already processed. Please set the new value if you still want the request to be processed,  \r\n          RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Client has reached his total loss limit,  \r\n          RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Client has reached his total risk limit\r\n\r\n        enum:\r\n          - ABOVE_MAX_BET_AMOUNT\r\n          - ALL_BETTING_CLOSED\r\n          - BELOW_MIN_BET_AMOUNT\r\n          - BLOCKED_BETTING\r\n          - BLOCKED_CLIENT\r\n          - DOUBLE_HIT\r\n          - DUPLICATE_CLIENT_REFERENCE_ID\r\n          - INCOMPLETE_CUSTOMER_BETTING_PROFILE\r\n          - INSUFFICIENT_FUNDS\r\n          - INVALID_COUNTRY\r\n          - INVALID_CUSTOMER_PROFILE\r\n          - INVALID_LEGS\r\n          - INVALID_REQUEST\r\n          - ODDS_FORMAT_MISMATCH\r\n          - RESUBMIT_REQUEST\r\n          - TEASER_DOES_NOT_EXIST\r\n          - SAME_EVENT_ONLY_REQUIRED\r\n          - SYSTEM_ERROR_1\r\n          - SYSTEM_ERROR_2\r\n          - SYSTEM_ERROR_3\r\n          - TOO_FEW_LEGS\r\n          - TOO_MANY_LEGS\r\n          - DUPLICATE_UNIQUE_REQUEST_ID\r\n          - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\r\n          - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        description: Id of a newly created bet.\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: Unique identifier provided in the request.\r\n      price:\r\n        type: number\r\n        format: double\r\n        description: Price for the bet.\r\n      riskAmount:\r\n        type: number\r\n        format: double\r\n        description: Amount wagered.\r\n      winAmount:\r\n        type: number\r\n        format: double\r\n        description: Potential winnings.\r\n      winRiskStake:\r\n        type: string\r\n        description: Whether the stake amount is risk or win amount.\r\n      invalidLegs:\r\n        type: array\r\n        description: 'A collection of invalid legs, if any.'\r\n        items:\r\n          $ref: '#/definitions/PlaceTeaserBetLegResponse'\r\n      validLegs:\r\n        type: array\r\n        description: 'A collection of valid legs, if any.'\r\n        items:\r\n          $ref: '#/definitions/PlaceTeaserBetLegResponse'\r\n      teaserBet:\r\n        $ref: '#/definitions/TeaserBet'\r\n        description: 'Present if bet was accepted'\r\n  PlaceTeaserBetLegResponse:\r\n    type: object\r\n    properties:\r\n      status:\r\n        type: string\r\n        description: Status of the request.\r\n      errorCode:\r\n        type: string\r\n        description: |\r\n          When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.\r\n          \r\n          CANNOT_TEASER_LIVE_GAME = Teaser is not allowed on a live game,   \r\n          CHECK_TEASER_ERROR = The teaser is invalid, check the teaser error for more details,  \r\n          INVALID_EVENT = The game is not found in the system,  \r\n          INVALID_LEG_BET = The wager is not verified,  \r\n          INVALID_LEG_BET_TYPE = Wager type is not “teasable”, can be either Spread or Total,  \r\n          LINE_CHANGED = Wager is placed on a line that has changed,  \r\n          LINE_DOES_NOT_BELONG_TO_EVENT = There was no game found for the wager,  \r\n          OFFLINE_EVENT = Either the game is offline OR there was no game found for the wager,  \r\n          PAST_CUTOFFTIME = Wager is placed on a game after the cutoff time,  \r\n          POINTS_ARE_NOT_ADJUSTED = The teaser points were not adjusted,  \r\n          SYSTEM_ERROR_1 = System error,  \r\n          SYSTEM_ERROR_2 = System error,  \r\n          WAGER_DATA_MISSING = Wager is denied due to insufficient information available for validation,  \r\n          LINE_IS_NOT_AVAILABLE = Line is not available for the specified Teaser Leg.\r\n        enum:\r\n          - CANNOT_TEASER_LIVE_GAME\r\n          - CHECK_TEASER_ERROR\r\n          - INVALID_EVENT\r\n          - INVALID_LEG_BET\r\n          - INVALID_LEG_BET_TYPE\r\n          - LINE_CHANGED\r\n          - LINE_DOES_NOT_BELONG_TO_EVENT\r\n          - OFFLINE_EVENT\r\n          - PAST_CUTOFFTIME\r\n          - POINTS_ARE_NOT_ADJUSTED\r\n          - SYSTEM_ERROR_1\r\n          - SYSTEM_ERROR_2\r\n          - WAGER_DATA_MISSING\r\n          - LINE_IS_NOT_AVAILABLE\r\n      legId:\r\n        type: string\r\n        format: uuid\r\n        example: A9EB2EB1-13A5-4600-9F1B-4859379CDEC4\r\n        description: Echo of the legId from the request.\r\n      lineId:\r\n        type: integer\r\n        format: int64\r\n        description: Line identification that bet was placed on.\r\n      points:\r\n        type: number\r\n        format: double\r\n        description: Number of points.\r\n    description: ''\r\n  'MultiBetRequest[SpecialBetRequest]':\r\n    type: object\r\n    properties:\r\n      bets:\r\n        type: array\r\n        description: The individual bets.\r\n        items:\r\n          $ref: '#/definitions/SpecialBetRequest'\r\n    description: ''\r\n  SpecialBetRequest:\r\n    type: object\r\n    properties:\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: This unique id of the place bet requests. This is to support idempotent requests.\r\n      acceptBetterLine:\r\n        type: boolean\r\n        example: true\r\n        description: Whether or not to accept a bet when there is a line change in favor of the client.\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      stake:\r\n        type: number\r\n        format: double\r\n        example: 10.5\r\n        description: amount in client’s currency.\r\n      winRiskStake:\r\n        type: string\r\n        example: RISK\r\n        description: Whether the stake amount is risk or win amount.\r\n        enum:\r\n          - WIN\r\n          - RISK\r\n      lineId:\r\n        type: integer\r\n        format: int64\r\n        example: 51024304\r\n        description: Line identification.\r\n      specialId:\r\n        type: integer\r\n        format: int64\r\n        example: 726394409\r\n        description: Special identification.\r\n      contestantId:\r\n        type: integer\r\n        format: int64\r\n        example: 726394411\r\n        description: Contestant identification.\r\n    description: ''\r\n  'MultiBetResponse[SpecialBetResponse]':\r\n    type: object\r\n    properties:\r\n      bets:\r\n        type: array\r\n        description: The individual bets.\r\n        items:\r\n          $ref: '#/definitions/SpecialBetResponse'\r\n    description: ''\r\n  SpecialBetResponse:\r\n    type: object\r\n    properties:\r\n      status:\r\n        type: string\r\n        example: ACCEPTED\r\n        description: Status of the request.\r\n        enum:\r\n          - ACCEPTED\r\n          - PROCESSED_WITH_ERROR\r\n      errorCode:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: |\r\n          When Status is PROCESSED_WITH_ERROR, provides a code indicating the specific problem.\r\n          \r\n          ALL_BETTING_CLOSED = Betting is not allowed at this moment. This may happen during system maintenance.  \r\n           ABOVE_MAX_BET_AMOUNT = Stake is above allowed maximum amount,  \r\n           BELOW_MIN_BET_AMOUNT = Stake is below allowed minimum amount,  \r\n           BLOCKED_BETTING = Betting is suspened for the client,  \r\n           BLOCKED_CLIENT = Client is no longer active,  \r\n           CONTEST_NOT_FOUND = Incorrect contest id provided or contest is no longer available,  \r\n           DUPLICATE_UNIQUE_REQUEST_ID = UniqueRequestId must be inque for each bet,  \r\n           INCOMPLETE_CUSTOMER_BETTING_PROFILE = Customer profile could not be loaded,   \r\n           INSUFFICIENT_FUNDS = Bet is submitted by a client with insufficient funds,  \r\n           INVALID_COUNTRY = Client country is not allowed for betting,  \r\n           INVALID_REQUEST = Special bet request is not valid,  \r\n           LINE_CHANGED = Bet is submitted on a line that has changed,  \r\n           PAST_CUTOFFTIME = Bet is submitted on a game after the betting cutoff time,  \r\n           RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED = Self-imposed loss limit exceeded,  \r\n           RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED = Self-imposed risk limit exceeded,  \r\n           RESUBMIT_REQUEST = The ticket hast to be resubmitted,  \r\n           SYSTEM_ERROR_1 = Unexpected error,  \r\n           SYSTEM_ERROR_2 = Unexpected error,  \r\n           UNIQUE_REQUEST_ID_REQUIRED = UniqueRequestId is missing,  \r\n           INVALID_CUSTOMER_PROFILE\r\n        enum:\r\n          - ALL_BETTING_CLOSED\r\n          - ABOVE_MAX_BET_AMOUNT\r\n          - BELOW_MIN_BET_AMOUNT\r\n          - BLOCKED_BETTING\r\n          - BLOCKED_CLIENT\r\n          - CONTEST_NOT_FOUND\r\n          - DUPLICATE_UNIQUE_REQUEST_ID\r\n          - INCOMPLETE_CUSTOMER_BETTING_PROFILE\r\n          - INSUFFICIENT_FUNDS\r\n          - INVALID_COUNTRY\r\n          - INVALID_REQUEST\r\n          - LINE_CHANGED\r\n          - PAST_CUTOFFTIME\r\n          - RESPONSIBLE_BETTING_LOSS_LIMIT_EXCEEDED\r\n          - RESPONSIBLE_BETTING_RISK_LIMIT_EXCEEDED\r\n          - RESUBMIT_REQUEST\r\n          - SYSTEM_ERROR_1\r\n          - SYSTEM_ERROR_2\r\n          - UNIQUE_REQUEST_ID_REQUIRED\r\n          - INVALID_CUSTOMER_PROFILE\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        example: 760745142\r\n        description: Id of a newly created bet.\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: Unique identifier provided in the request.\r\n      betterLineWasAccepted:\r\n        type: boolean\r\n        example: false\r\n        description: Whether or not the bet was accepted on the line that changed in favour of client. This can be true only if acceptBetterLine in the Place Bet request is set to TRUE.\r\n      specialBet:\r\n        $ref: '#/definitions/SpecialBet'\r\n    description: ''\r\n  SpecialBet:\r\n    type: object\r\n    required:\r\n      - betId\r\n      - betStatus\r\n      - betType\r\n      - contestantId\r\n      - contestantName\r\n      - leagueId\r\n      - oddsFormat\r\n      - placedAt\r\n      - price\r\n      - risk\r\n      - specialId\r\n      - specialName\r\n      - sportId\r\n      - updateSequence\r\n      - wagerNumber\r\n      - win\r\n    properties:\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        example: 760748770\r\n        description: Bet identification\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: Unique Request Id\r\n      wagerNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 1\r\n        description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\r\n      placedAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-09T01:49:43Z'\r\n        description: Date time when the bet was placed.\r\n      settledAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-05T01:32:59Z'\r\n        description: Date time when the bet was settled.\r\n      betStatus:\r\n        type: string\r\n        example: ACCEPTED\r\n        description: | \r\n          Bet Status. \r\n          ACCEPTED = Bet was accepted, \r\n          CANCELLED = Bet is cancelled as per Pinnacle betting rules, \r\n          LOSE = The bet is settled as lose,\r\n          REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status, \r\n          WON = The bet is settled as won \r\n        enum:\r\n          - ACCEPTED\r\n          - CANCELLED\r\n          - LOSE\r\n          - REFUNDED\r\n          - WON\r\n      betType:\r\n        type: string\r\n        default: SPECIAL\r\n        example: SPECIAL\r\n      win:\r\n        type: number\r\n        format: double\r\n        example: 1\r\n        description: Win amount.\r\n      risk:\r\n        type: number\r\n        format: double\r\n        example: 1.51\r\n        description: Risk amount.\r\n      winLoss:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Win-Loss for settled bets.\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      customerCommission:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Client’s commission on the bet.\r\n      cancellationReason:\r\n        $ref: '#/definitions/CancellationReason'\r\n      updateSequence:\r\n        type: integer\r\n        format: int64\r\n        example: 113214135\r\n        description: Update Sequence. It gets updated when the bet status change.\r\n      specialId:\r\n        type: integer\r\n        format: int64\r\n        example: 726397620\r\n        description: ''\r\n      specialName:\r\n        type: string\r\n        example: Denver Broncos Regular Season Wins?\r\n        description: ''\r\n      contestantId:\r\n        type: integer\r\n        format: int64\r\n        example: 726397622\r\n        description: ''\r\n      contestantName:\r\n        type: string\r\n        example: Under\r\n        description: ''\r\n      price:\r\n        type: number\r\n        format: double\r\n        example: -151\r\n        description: ''\r\n      handicap:\r\n        type: number\r\n        format: double\r\n        example: 8.5\r\n        description: ''\r\n      units:\r\n        type: string\r\n        example: Regular Season Wins\r\n        description: ''\r\n      sportId:\r\n        type: integer\r\n        format: int32\r\n        example: 15\r\n        description: ''\r\n      leagueId:\r\n        type: integer\r\n        format: int32\r\n        example: 889\r\n        description: ''\r\n      eventId:\r\n        type: integer\r\n        format: int64\r\n        example: null\r\n        x-nullable: true\r\n        description: Populated if bet was placed on a special linked to the event.\r\n      periodNumber:\r\n        type: integer\r\n        format: int32\r\n        example: null\r\n        x-nullable: true\r\n        description: Populated if bet was placed on a special linked to the event.\r\n      team1:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: Populated if bet was placed on a special linked to the event.\r\n      team2:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: Populated if bet was placed on a special linked to the event.\r\n    description: ''\r\n  SpecialBetV3:\r\n    type: object\r\n    required:\r\n      - betId\r\n      - betStatus\r\n      - betType\r\n      - contestantId\r\n      - contestantName\r\n      - leagueId\r\n      - oddsFormat\r\n      - placedAt\r\n      - price\r\n      - risk\r\n      - specialId\r\n      - specialName\r\n      - sportId\r\n      - updateSequence\r\n      - wagerNumber\r\n      - win\r\n    properties:\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        example: 760748770\r\n        description: Bet identification\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: Unique Request Id\r\n      wagerNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 1\r\n        description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\r\n      placedAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-09T01:49:43Z'\r\n        description: Date time when the bet was placed.\r\n      settledAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-05T01:32:59Z'\r\n        description: Date time when the bet was settled.\r\n      betStatus:\r\n        type: string\r\n        example: ACCEPTED\r\n        description: | \r\n          Bet Status. \r\n          ACCEPTED = Bet was accepted, \r\n          CANCELLED = Bet is cancelled as per Pinnacle betting rules, \r\n          LOSE = The bet is settled as lose,\r\n          REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status, \r\n          WON = The bet is settled as won \r\n        enum:\r\n          - ACCEPTED\r\n          - CANCELLED\r\n          - LOSE\r\n          - REFUNDED\r\n          - WON\r\n      betType:\r\n        type: string\r\n        default: SPECIAL\r\n        example: SPECIAL\r\n      win:\r\n        type: number\r\n        format: double\r\n        example: 1\r\n        description: Win amount.\r\n      risk:\r\n        type: number\r\n        format: double\r\n        example: 1.51\r\n        description: Risk amount.\r\n      winLoss:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Win-Loss for settled bets.\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      customerCommission:\r\n        type: number\r\n        format: double\r\n        example: null\r\n        x-nullable: true\r\n        description: Client’s commission on the bet.\r\n      cancellationReason:\r\n        $ref: '#/definitions/CancellationReason'\r\n      updateSequence:\r\n        type: integer\r\n        format: int64\r\n        example: 113214135\r\n        description: Update Sequence. It gets updated when the bet status change.\r\n      specialId:\r\n        type: integer\r\n        format: int64\r\n        example: 726397620\r\n        description: ''\r\n      specialName:\r\n        type: string\r\n        example: Denver Broncos Regular Season Wins?\r\n        description: ''\r\n      contestantId:\r\n        type: integer\r\n        format: int64\r\n        example: 726397622\r\n        description: ''\r\n      contestantName:\r\n        type: string\r\n        example: Under\r\n        description: ''\r\n      price:\r\n        type: number\r\n        format: double\r\n        example: -151\r\n        description: ''\r\n      handicap:\r\n        type: number\r\n        format: double\r\n        example: 8.5\r\n        description: ''\r\n      units:\r\n        type: string\r\n        example: Regular Season Wins\r\n        description: ''\r\n      sportId:\r\n        type: integer\r\n        format: int32\r\n        example: 15\r\n        description: ''\r\n      leagueId:\r\n        type: integer\r\n        format: int32\r\n        example: 889\r\n        description: ''\r\n      eventId:\r\n        type: integer\r\n        format: int64\r\n        example: null\r\n        x-nullable: true\r\n        description: Populated if bet was placed on a special linked to the event.\r\n      periodNumber:\r\n        type: integer\r\n        format: int32\r\n        example: null\r\n        x-nullable: true\r\n        description: Populated if bet was placed on a special linked to the event.\r\n      team1:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: Populated if bet was placed on a special linked to the event.\r\n      team2:\r\n        type: string\r\n        example: null\r\n        x-nullable: true\r\n        description: Populated if bet was placed on a special linked to the event.\r\n      eventStartTime:\r\n        type: string \r\n        format: date-time\r\n        example: 2017-10-05T01:32:59Z\r\n        x-nullable: false\r\n        description: Date time when the event starts.\r\n    description: ''    \r\n  GetBetsByTypeResponse:\r\n    type: object\r\n    properties:\r\n      straightBets:\r\n        type: array\r\n        description: A collection of placed straight bets.\r\n        items:\r\n          $ref: '#/definitions/StraightBet'\r\n      parlayBets:\r\n        type: array\r\n        description: A collection of placed parlay bets.\r\n        items:\r\n          $ref: '#/definitions/ParlayBet'\r\n      teaserBets:\r\n        type: array\r\n        description: A collection of placed teaser bets.\r\n        items:\r\n          $ref: '#/definitions/TeaserBet'\r\n      specialBets:\r\n        type: array\r\n        description: A collection of placed special bets.\r\n        items:\r\n          $ref: '#/definitions/SpecialBet'\r\n      manualBets:\r\n        type: array\r\n        description: A collection of placed manual bets.\r\n        items:\r\n          $ref: '#/definitions/ManualBet'\r\n    description: ''\r\n  GetBetsByTypeResponseV3:\r\n    type: object\r\n    properties:\r\n      moreAvailable:\r\n        type: boolean \r\n        description: Whether there are more pages available.\r\n      pageSize:\r\n        type: integer \r\n        description: Page size. Default is 1000.\r\n        example: 1000\r\n      fromRecord:\r\n        type: integer \r\n        description: Starting record number of the result set. Records start at zero\r\n      toRecord:\r\n        type: integer \r\n        description: Ending record number of the result set. \r\n      straightBets:\r\n        type: array\r\n        description: A collection of placed straight bets.\r\n        items:\r\n          $ref: '#/definitions/StraightBetV3'\r\n      parlayBets:\r\n        type: array\r\n        description: A collection of placed parlay bets.\r\n        items:\r\n          $ref: '#/definitions/ParlayBet'\r\n      teaserBets:\r\n        type: array\r\n        description: A collection of placed teaser bets.\r\n        items:\r\n          $ref: '#/definitions/TeaserBet'\r\n      specialBets:\r\n        type: array\r\n        description: A collection of placed special bets.\r\n        items:\r\n          $ref: '#/definitions/SpecialBetV3'\r\n      manualBets:\r\n        type: array\r\n        description: A collection of placed manual bets.\r\n        items:\r\n          $ref: '#/definitions/ManualBet'\r\n    description: ''  \r\n  TeaserBet:\r\n    type: object\r\n    required:\r\n      - betId\r\n      - betStatus\r\n      - betType\r\n      - isSameEventOnly\r\n      - legs\r\n      - maxPicks\r\n      - minPicks\r\n      - oddsFormat\r\n      - placedAt\r\n      - risk\r\n      - teaserName\r\n      - updateSequence\r\n      - wagerNumber\r\n      - win\r\n    properties:\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        description: Bet identification\r\n      uniqueRequestId:\r\n        type: string\r\n        format: uuid\r\n        example: 10924E23-A2FE-4317-BFFD-80504675F554\r\n        description: Unique Request Id\r\n      wagerNumber:\r\n        type: integer\r\n        format: int32\r\n        description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\r\n      placedAt:\r\n        type: string\r\n        format: date-time\r\n        description: Date time when the bet was placed.\r\n      settledAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-05T01:32:59Z'\r\n        description: Date time when the bet was settled.\r\n      betStatus:\r\n        type: string\r\n        description: | \r\n            Bet Status. \r\n            \r\n            ACCEPTED = Bet was accepted,  \r\n            CANCELLED = Bet is cancelled as per Pinnacle betting rules,  \r\n            LOSE = The bet is settled as lose,  \r\n            REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status,  \r\n            WON = The bet is settled as won \r\n        enum:\r\n          - ACCEPTED\r\n          - CANCELLED\r\n          - LOSE\r\n          - REFUNDED\r\n          - WON\r\n      betType:\r\n        type: string\r\n        default: TEASER\r\n        example: TEASER\r\n      win:\r\n        type: number\r\n        format: double\r\n        description: Win amount.\r\n      risk:\r\n        type: number\r\n        format: double\r\n        description: Risk amount.\r\n      winLoss:\r\n        type: number\r\n        format: double\r\n        description: Win-Loss for settled bets.\r\n      oddsFormat:\r\n        $ref: '#/definitions/OddsFormat'\r\n      customerCommission:\r\n        type: number\r\n        format: double\r\n        description: Client’s commission on the bet.\r\n      cancellationReason:\r\n        $ref: '#/definitions/CancellationReason'\r\n      updateSequence:\r\n        type: integer\r\n        format: int64\r\n        description: Update Sequence\r\n      teaserName:\r\n        type: string\r\n        description: ''\r\n      isSameEventOnly:\r\n        type: boolean\r\n        description: ''\r\n      minPicks:\r\n        type: number\r\n        format: double\r\n        description: ''\r\n      maxPicks:\r\n        type: number\r\n        format: double\r\n        description: ''\r\n      price:\r\n        type: number\r\n        format: double\r\n        example: 682\r\n        description: 'Populated for all teaser bets and will be the original price at the time of the placement.'\r\n      finalPrice:\r\n        type: number\r\n        format: double\r\n        example: 0\r\n        description: Only for settled parlay. Final price may differ in case leg was cancelled or half won. \r\n      legs:\r\n        type: array\r\n        description: ''\r\n        items:\r\n          $ref: '#/definitions/TeaserLeg'\r\n    description: ''\r\n  ManualBet:\r\n    type: object\r\n    required:\r\n      - betId\r\n      - betStatus\r\n      - betType\r\n      - description\r\n      - placedAt\r\n      - risk\r\n      - updateSequence\r\n      - wagerNumber\r\n      - win\r\n    properties:\r\n      betId:\r\n        type: integer\r\n        format: int64\r\n        example: 760063588\r\n        description: Bet identification\r\n      wagerNumber:\r\n        type: integer\r\n        format: int32\r\n        example: 1\r\n        description: 'Wager identification. All bets placed thru the API will have value 1. Website Classic view supports multiple contest(special) bets placement in the same bet slip in that case the bet would have appropriate wager number, as well as all round robin parlay bets.'\r\n      placedAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-06T14:56:27Z'\r\n        description: Date time when the bet was placed.\r\n      settledAt:\r\n        type: string\r\n        format: date-time\r\n        example: '2017-09-05T01:32:59Z'\r\n        description: Date time when the bet was settled.\r\n      betStatus:\r\n        type: string\r\n        description: |\r\n          Bet Status. \r\n          \r\n          ACCEPTED = Bet was accepted,  \r\n          CANCELLED = Bet is cancelled as per Pinnacle betting rules,  \r\n          LOSE = The bet is settled as lose,  \r\n          REFUNDED = When an event is cancelled or when the bet is settled as push, the bet will have REFUNDED status,  \r\n          WON = The bet is settled as won \r\n        enum:\r\n          - ACCEPTED\r\n          - CANCELLED\r\n          - LOSE\r\n          - REFUNDED\r\n          - WON\r\n      betType:\r\n        type: string\r\n        default: MANUAL\r\n        example: MANUAL\r\n      win:\r\n        type: number\r\n        format: double\r\n        example: 15000\r\n        description: Win amount.\r\n      risk:\r\n        type: number\r\n        format: double\r\n        example: 500\r\n        description: Risk amount.\r\n      winLoss:\r\n        type: number\r\n        format: double\r\n        description: Win-Loss for settled bets.\r\n      updateSequence:\r\n        type: integer\r\n        format: int64\r\n        example: 112472310\r\n        description: Update Sequence\r\n      description:\r\n        type: string\r\n        example: Soccer Props - Partizan vs Crvena Zvezda - Partizan @ +3000\r\n        description: Manual bet description.\r\n      referenceBetId:\r\n        type: integer\r\n        format: int64\r\n        example: null\r\n        x-nullable: true\r\n        description: Referenced original bet id.\r\n    description: ''\r\n  TeaserLeg:\r\n    type: object\r\n    properties:\r\n      sportId:\r\n        type: integer\r\n        format: int32\r\n        description: ''\r\n      legBetType:\r\n        type: string\r\n        description: 'Teaser leg type.'\r\n        enum:\r\n          - SPREAD\r\n          - TOTAL_POINTS\r\n      legBetStatus:\r\n        type: string\r\n        description: |\r\n          CANCELLED = The leg is canceled- the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss,  \r\n          LOSE = The leg is a loss or a push-lose. When Push-lose happens, the half of the stake on the leg will be pushed to the next leg, and the other half will be a lose. This can happen only when the leg is placed on a quarter points handicap,  \r\n          PUSH = The leg is a push - the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss,  \r\n          REFUNDED = The leg is refunded - the stake on this leg will be transferred to the next one. In this case the leg will be ignored when calculating the winLoss,  \r\n          WON = The leg is a won or a push-won. When Push-won happens, the half of the stake on the leg will be pushed to the next leg, and the other half is won. This can happen only when the leg is placed on a quarter points handicap  \r\n        enum:\r\n          - CANCELLED\r\n          - LOSE\r\n          - PUSH\r\n          - REFUNDED\r\n          - WON\r\n      leagueId:\r\n        type: integer\r\n        format: int32\r\n        description: ''\r\n      eventId:\r\n        type: integer\r\n        format: int64\r\n        description: ''\r\n      eventStartTime:\r\n        type: string\r\n        description: ''\r\n      handicap:\r\n        type: number\r\n        format: double\r\n        description: ''\r\n      teamName:\r\n        type: string\r\n        description: ''\r\n      side:\r\n        type: string\r\n        description: 'Side type.'\r\n        enum:\r\n          - OVER\r\n          - UNDER\r\n      team1:\r\n        type: string\r\n        description: ''\r\n      team2:\r\n        type: string\r\n        description: ''\r\n      periodNumber:\r\n        type: integer\r\n        format: int32\r\n        description: ''\r\n    description: ''\r\n  OddsFormat:\r\n    type: string\r\n    description: |\r\n      Bet odds format.  \r\n      AMERICAN = American odds format,  \r\n      DECIMAL = Decimal (European) odds format,  \r\n      HONGKONG = Hong Kong odds format,  \r\n      INDONESIAN = Indonesian odds format,  \r\n      MALAY = Malaysian odds format \r\n    enum:\r\n      - AMERICAN\r\n      - DECIMAL\r\n      - HONGKONG\r\n      - INDONESIAN\r\n      - MALAY  \r\n    example: DECIMAL\r\n  BettingStatusResponse:\r\n    type: object\r\n    required:\r\n      - status\r\n    properties:\r\n      status:\r\n        type: string\r\n        description: |\r\n          Betting status.\r\n        enum:\r\n          - ALL_BETTING_ENABLED\r\n          - ALL_LIVE_BETTING_CLOSED\r\n          - ALL_BETTING_CLOSED\r\n    description: ''\r\n",
      "url": "https://raw.githubusercontent.com/ps3838api/api-spec/master/OpenAPI/betsapi.yaml",
      "output": null
    }
  },
  "codeGenerators": {
    "openApiToCSharpClient": {
      "clientBaseClass": null,
      "configurationClass": null,
      "generateClientClasses": true,
      "generateClientInterfaces": true,
      "injectHttpClient": true,
      "disposeHttpClient": true,
      "protectedMethods": [],
      "generateExceptionClasses": true,
      "exceptionClass": "BetsApiException",
      "wrapDtoExceptions": true,
      "useHttpClientCreationMethod": false,
      "httpClientType": "System.Net.Http.HttpClient",
      "useHttpRequestMessageCreationMethod": false,
      "useBaseUrl": true,
      "generateBaseUrlProperty": true,
      "generateSyncMethods": false,
      "exposeJsonSerializerSettings": false,
      "clientClassAccessModifier": "public",
      "typeAccessModifier": "public",
      "generateContractsOutput": false,
      "contractsNamespace": null,
      "contractsOutputFilePath": null,
      "parameterDateTimeFormat": "s",
      "generateUpdateJsonSerializerSettingsMethod": true,
      "serializeTypeInformation": false,
      "queryNullValue": "",
      "className": "BetsClient",
      "operationGenerationMode": "SingleClientFromPathSegments",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Ps3838.Bets",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.ICollection",
      "arrayInstanceType": "System.Collections.ObjectModel.Collection",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "PinnacleApiWrapper/GeneratedCode/BetsClient.cs"
    }
  }
}